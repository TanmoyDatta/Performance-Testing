/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 278.0, "minX": 0.0, "maxY": 11470.0, "series": [{"data": [[0.0, 335.0], [0.1, 339.0], [0.2, 341.0], [0.3, 341.0], [0.4, 342.0], [0.5, 344.0], [0.6, 344.0], [0.7, 344.0], [0.8, 345.0], [0.9, 345.0], [1.0, 346.0], [1.1, 346.0], [1.2, 347.0], [1.3, 347.0], [1.4, 347.0], [1.5, 348.0], [1.6, 348.0], [1.7, 348.0], [1.8, 348.0], [1.9, 349.0], [2.0, 349.0], [2.1, 350.0], [2.2, 350.0], [2.3, 350.0], [2.4, 351.0], [2.5, 351.0], [2.6, 351.0], [2.7, 351.0], [2.8, 351.0], [2.9, 352.0], [3.0, 352.0], [3.1, 352.0], [3.2, 353.0], [3.3, 353.0], [3.4, 353.0], [3.5, 353.0], [3.6, 354.0], [3.7, 354.0], [3.8, 354.0], [3.9, 354.0], [4.0, 355.0], [4.1, 356.0], [4.2, 356.0], [4.3, 356.0], [4.4, 356.0], [4.5, 357.0], [4.6, 357.0], [4.7, 357.0], [4.8, 357.0], [4.9, 357.0], [5.0, 357.0], [5.1, 358.0], [5.2, 358.0], [5.3, 358.0], [5.4, 358.0], [5.5, 358.0], [5.6, 359.0], [5.7, 359.0], [5.8, 359.0], [5.9, 359.0], [6.0, 360.0], [6.1, 360.0], [6.2, 360.0], [6.3, 360.0], [6.4, 360.0], [6.5, 360.0], [6.6, 360.0], [6.7, 360.0], [6.8, 361.0], [6.9, 361.0], [7.0, 361.0], [7.1, 361.0], [7.2, 361.0], [7.3, 361.0], [7.4, 362.0], [7.5, 362.0], [7.6, 362.0], [7.7, 363.0], [7.8, 363.0], [7.9, 363.0], [8.0, 363.0], [8.1, 363.0], [8.2, 363.0], [8.3, 363.0], [8.4, 363.0], [8.5, 364.0], [8.6, 364.0], [8.7, 364.0], [8.8, 364.0], [8.9, 364.0], [9.0, 364.0], [9.1, 364.0], [9.2, 364.0], [9.3, 365.0], [9.4, 365.0], [9.5, 365.0], [9.6, 365.0], [9.7, 365.0], [9.8, 365.0], [9.9, 366.0], [10.0, 366.0], [10.1, 366.0], [10.2, 366.0], [10.3, 367.0], [10.4, 367.0], [10.5, 367.0], [10.6, 367.0], [10.7, 367.0], [10.8, 367.0], [10.9, 367.0], [11.0, 367.0], [11.1, 367.0], [11.2, 367.0], [11.3, 367.0], [11.4, 367.0], [11.5, 367.0], [11.6, 367.0], [11.7, 368.0], [11.8, 368.0], [11.9, 368.0], [12.0, 368.0], [12.1, 368.0], [12.2, 368.0], [12.3, 368.0], [12.4, 368.0], [12.5, 368.0], [12.6, 368.0], [12.7, 369.0], [12.8, 369.0], [12.9, 369.0], [13.0, 369.0], [13.1, 369.0], [13.2, 369.0], [13.3, 369.0], [13.4, 369.0], [13.5, 369.0], [13.6, 369.0], [13.7, 370.0], [13.8, 370.0], [13.9, 370.0], [14.0, 370.0], [14.1, 370.0], [14.2, 370.0], [14.3, 371.0], [14.4, 371.0], [14.5, 371.0], [14.6, 371.0], [14.7, 371.0], [14.8, 371.0], [14.9, 372.0], [15.0, 372.0], [15.1, 372.0], [15.2, 372.0], [15.3, 372.0], [15.4, 373.0], [15.5, 373.0], [15.6, 373.0], [15.7, 373.0], [15.8, 373.0], [15.9, 373.0], [16.0, 374.0], [16.1, 374.0], [16.2, 374.0], [16.3, 375.0], [16.4, 375.0], [16.5, 375.0], [16.6, 376.0], [16.7, 376.0], [16.8, 376.0], [16.9, 376.0], [17.0, 376.0], [17.1, 376.0], [17.2, 376.0], [17.3, 377.0], [17.4, 377.0], [17.5, 377.0], [17.6, 377.0], [17.7, 377.0], [17.8, 377.0], [17.9, 377.0], [18.0, 378.0], [18.1, 378.0], [18.2, 378.0], [18.3, 379.0], [18.4, 379.0], [18.5, 379.0], [18.6, 379.0], [18.7, 379.0], [18.8, 380.0], [18.9, 380.0], [19.0, 380.0], [19.1, 380.0], [19.2, 381.0], [19.3, 381.0], [19.4, 381.0], [19.5, 381.0], [19.6, 381.0], [19.7, 381.0], [19.8, 381.0], [19.9, 381.0], [20.0, 381.0], [20.1, 382.0], [20.2, 382.0], [20.3, 382.0], [20.4, 382.0], [20.5, 382.0], [20.6, 382.0], [20.7, 382.0], [20.8, 382.0], [20.9, 383.0], [21.0, 383.0], [21.1, 383.0], [21.2, 383.0], [21.3, 384.0], [21.4, 385.0], [21.5, 385.0], [21.6, 385.0], [21.7, 385.0], [21.8, 385.0], [21.9, 385.0], [22.0, 385.0], [22.1, 385.0], [22.2, 385.0], [22.3, 386.0], [22.4, 386.0], [22.5, 386.0], [22.6, 386.0], [22.7, 387.0], [22.8, 387.0], [22.9, 387.0], [23.0, 387.0], [23.1, 387.0], [23.2, 388.0], [23.3, 388.0], [23.4, 388.0], [23.5, 388.0], [23.6, 388.0], [23.7, 389.0], [23.8, 389.0], [23.9, 389.0], [24.0, 389.0], [24.1, 389.0], [24.2, 390.0], [24.3, 390.0], [24.4, 390.0], [24.5, 390.0], [24.6, 390.0], [24.7, 390.0], [24.8, 391.0], [24.9, 391.0], [25.0, 391.0], [25.1, 391.0], [25.2, 391.0], [25.3, 392.0], [25.4, 392.0], [25.5, 392.0], [25.6, 392.0], [25.7, 393.0], [25.8, 393.0], [25.9, 393.0], [26.0, 393.0], [26.1, 393.0], [26.2, 393.0], [26.3, 393.0], [26.4, 394.0], [26.5, 394.0], [26.6, 394.0], [26.7, 394.0], [26.8, 394.0], [26.9, 394.0], [27.0, 394.0], [27.1, 395.0], [27.2, 395.0], [27.3, 395.0], [27.4, 395.0], [27.5, 395.0], [27.6, 396.0], [27.7, 396.0], [27.8, 396.0], [27.9, 396.0], [28.0, 397.0], [28.1, 397.0], [28.2, 397.0], [28.3, 397.0], [28.4, 397.0], [28.5, 397.0], [28.6, 397.0], [28.7, 397.0], [28.8, 397.0], [28.9, 397.0], [29.0, 398.0], [29.1, 398.0], [29.2, 398.0], [29.3, 398.0], [29.4, 399.0], [29.5, 399.0], [29.6, 399.0], [29.7, 399.0], [29.8, 399.0], [29.9, 399.0], [30.0, 399.0], [30.1, 399.0], [30.2, 400.0], [30.3, 400.0], [30.4, 400.0], [30.5, 400.0], [30.6, 400.0], [30.7, 400.0], [30.8, 401.0], [30.9, 401.0], [31.0, 401.0], [31.1, 401.0], [31.2, 401.0], [31.3, 401.0], [31.4, 402.0], [31.5, 402.0], [31.6, 402.0], [31.7, 402.0], [31.8, 403.0], [31.9, 403.0], [32.0, 403.0], [32.1, 403.0], [32.2, 404.0], [32.3, 404.0], [32.4, 404.0], [32.5, 404.0], [32.6, 405.0], [32.7, 405.0], [32.8, 405.0], [32.9, 405.0], [33.0, 405.0], [33.1, 405.0], [33.2, 406.0], [33.3, 406.0], [33.4, 406.0], [33.5, 406.0], [33.6, 407.0], [33.7, 407.0], [33.8, 407.0], [33.9, 407.0], [34.0, 407.0], [34.1, 407.0], [34.2, 407.0], [34.3, 408.0], [34.4, 408.0], [34.5, 408.0], [34.6, 408.0], [34.7, 409.0], [34.8, 409.0], [34.9, 409.0], [35.0, 409.0], [35.1, 410.0], [35.2, 410.0], [35.3, 410.0], [35.4, 410.0], [35.5, 410.0], [35.6, 410.0], [35.7, 410.0], [35.8, 411.0], [35.9, 411.0], [36.0, 411.0], [36.1, 411.0], [36.2, 411.0], [36.3, 411.0], [36.4, 411.0], [36.5, 411.0], [36.6, 412.0], [36.7, 412.0], [36.8, 412.0], [36.9, 412.0], [37.0, 412.0], [37.1, 412.0], [37.2, 413.0], [37.3, 413.0], [37.4, 413.0], [37.5, 413.0], [37.6, 414.0], [37.7, 414.0], [37.8, 414.0], [37.9, 414.0], [38.0, 414.0], [38.1, 415.0], [38.2, 415.0], [38.3, 415.0], [38.4, 415.0], [38.5, 415.0], [38.6, 415.0], [38.7, 415.0], [38.8, 415.0], [38.9, 416.0], [39.0, 416.0], [39.1, 416.0], [39.2, 416.0], [39.3, 416.0], [39.4, 416.0], [39.5, 417.0], [39.6, 417.0], [39.7, 417.0], [39.8, 417.0], [39.9, 417.0], [40.0, 417.0], [40.1, 417.0], [40.2, 418.0], [40.3, 418.0], [40.4, 418.0], [40.5, 418.0], [40.6, 418.0], [40.7, 418.0], [40.8, 418.0], [40.9, 419.0], [41.0, 419.0], [41.1, 419.0], [41.2, 419.0], [41.3, 419.0], [41.4, 420.0], [41.5, 420.0], [41.6, 420.0], [41.7, 420.0], [41.8, 421.0], [41.9, 421.0], [42.0, 421.0], [42.1, 421.0], [42.2, 421.0], [42.3, 421.0], [42.4, 421.0], [42.5, 421.0], [42.6, 422.0], [42.7, 422.0], [42.8, 422.0], [42.9, 422.0], [43.0, 422.0], [43.1, 422.0], [43.2, 422.0], [43.3, 422.0], [43.4, 423.0], [43.5, 423.0], [43.6, 423.0], [43.7, 423.0], [43.8, 424.0], [43.9, 424.0], [44.0, 424.0], [44.1, 425.0], [44.2, 425.0], [44.3, 425.0], [44.4, 425.0], [44.5, 425.0], [44.6, 425.0], [44.7, 425.0], [44.8, 425.0], [44.9, 426.0], [45.0, 426.0], [45.1, 426.0], [45.2, 426.0], [45.3, 426.0], [45.4, 426.0], [45.5, 426.0], [45.6, 427.0], [45.7, 427.0], [45.8, 427.0], [45.9, 427.0], [46.0, 428.0], [46.1, 428.0], [46.2, 428.0], [46.3, 428.0], [46.4, 428.0], [46.5, 428.0], [46.6, 428.0], [46.7, 428.0], [46.8, 428.0], [46.9, 428.0], [47.0, 429.0], [47.1, 429.0], [47.2, 430.0], [47.3, 430.0], [47.4, 430.0], [47.5, 430.0], [47.6, 431.0], [47.7, 431.0], [47.8, 431.0], [47.9, 431.0], [48.0, 431.0], [48.1, 432.0], [48.2, 432.0], [48.3, 432.0], [48.4, 432.0], [48.5, 432.0], [48.6, 433.0], [48.7, 434.0], [48.8, 434.0], [48.9, 434.0], [49.0, 435.0], [49.1, 435.0], [49.2, 435.0], [49.3, 435.0], [49.4, 436.0], [49.5, 436.0], [49.6, 436.0], [49.7, 437.0], [49.8, 437.0], [49.9, 437.0], [50.0, 438.0], [50.1, 439.0], [50.2, 439.0], [50.3, 439.0], [50.4, 440.0], [50.5, 440.0], [50.6, 441.0], [50.7, 441.0], [50.8, 441.0], [50.9, 441.0], [51.0, 441.0], [51.1, 441.0], [51.2, 442.0], [51.3, 442.0], [51.4, 442.0], [51.5, 442.0], [51.6, 442.0], [51.7, 443.0], [51.8, 443.0], [51.9, 443.0], [52.0, 443.0], [52.1, 443.0], [52.2, 444.0], [52.3, 444.0], [52.4, 444.0], [52.5, 444.0], [52.6, 444.0], [52.7, 445.0], [52.8, 445.0], [52.9, 445.0], [53.0, 446.0], [53.1, 446.0], [53.2, 446.0], [53.3, 446.0], [53.4, 447.0], [53.5, 447.0], [53.6, 448.0], [53.7, 448.0], [53.8, 448.0], [53.9, 449.0], [54.0, 449.0], [54.1, 450.0], [54.2, 450.0], [54.3, 451.0], [54.4, 451.0], [54.5, 452.0], [54.6, 452.0], [54.7, 452.0], [54.8, 452.0], [54.9, 453.0], [55.0, 453.0], [55.1, 453.0], [55.2, 453.0], [55.3, 453.0], [55.4, 454.0], [55.5, 455.0], [55.6, 455.0], [55.7, 455.0], [55.8, 455.0], [55.9, 455.0], [56.0, 455.0], [56.1, 455.0], [56.2, 457.0], [56.3, 457.0], [56.4, 457.0], [56.5, 457.0], [56.6, 458.0], [56.7, 458.0], [56.8, 458.0], [56.9, 458.0], [57.0, 459.0], [57.1, 459.0], [57.2, 459.0], [57.3, 459.0], [57.4, 459.0], [57.5, 459.0], [57.6, 460.0], [57.7, 460.0], [57.8, 461.0], [57.9, 461.0], [58.0, 461.0], [58.1, 461.0], [58.2, 462.0], [58.3, 462.0], [58.4, 462.0], [58.5, 463.0], [58.6, 464.0], [58.7, 464.0], [58.8, 465.0], [58.9, 465.0], [59.0, 465.0], [59.1, 465.0], [59.2, 465.0], [59.3, 466.0], [59.4, 466.0], [59.5, 466.0], [59.6, 466.0], [59.7, 467.0], [59.8, 467.0], [59.9, 467.0], [60.0, 467.0], [60.1, 468.0], [60.2, 468.0], [60.3, 469.0], [60.4, 469.0], [60.5, 469.0], [60.6, 469.0], [60.7, 470.0], [60.8, 470.0], [60.9, 470.0], [61.0, 470.0], [61.1, 471.0], [61.2, 472.0], [61.3, 472.0], [61.4, 473.0], [61.5, 473.0], [61.6, 473.0], [61.7, 474.0], [61.8, 474.0], [61.9, 474.0], [62.0, 474.0], [62.1, 475.0], [62.2, 475.0], [62.3, 476.0], [62.4, 476.0], [62.5, 476.0], [62.6, 477.0], [62.7, 477.0], [62.8, 477.0], [62.9, 477.0], [63.0, 477.0], [63.1, 477.0], [63.2, 477.0], [63.3, 478.0], [63.4, 478.0], [63.5, 478.0], [63.6, 478.0], [63.7, 479.0], [63.8, 479.0], [63.9, 480.0], [64.0, 480.0], [64.1, 480.0], [64.2, 481.0], [64.3, 482.0], [64.4, 483.0], [64.5, 483.0], [64.6, 483.0], [64.7, 484.0], [64.8, 485.0], [64.9, 485.0], [65.0, 485.0], [65.1, 485.0], [65.2, 486.0], [65.3, 486.0], [65.4, 487.0], [65.5, 487.0], [65.6, 487.0], [65.7, 488.0], [65.8, 489.0], [65.9, 489.0], [66.0, 490.0], [66.1, 490.0], [66.2, 491.0], [66.3, 491.0], [66.4, 491.0], [66.5, 491.0], [66.6, 492.0], [66.7, 492.0], [66.8, 492.0], [66.9, 492.0], [67.0, 492.0], [67.1, 493.0], [67.2, 494.0], [67.3, 494.0], [67.4, 495.0], [67.5, 495.0], [67.6, 497.0], [67.7, 497.0], [67.8, 498.0], [67.9, 498.0], [68.0, 498.0], [68.1, 498.0], [68.2, 499.0], [68.3, 500.0], [68.4, 500.0], [68.5, 502.0], [68.6, 502.0], [68.7, 502.0], [68.8, 503.0], [68.9, 503.0], [69.0, 503.0], [69.1, 503.0], [69.2, 504.0], [69.3, 506.0], [69.4, 507.0], [69.5, 507.0], [69.6, 508.0], [69.7, 508.0], [69.8, 509.0], [69.9, 510.0], [70.0, 510.0], [70.1, 510.0], [70.2, 511.0], [70.3, 511.0], [70.4, 511.0], [70.5, 511.0], [70.6, 512.0], [70.7, 514.0], [70.8, 514.0], [70.9, 514.0], [71.0, 515.0], [71.1, 515.0], [71.2, 517.0], [71.3, 517.0], [71.4, 518.0], [71.5, 518.0], [71.6, 519.0], [71.7, 521.0], [71.8, 521.0], [71.9, 522.0], [72.0, 522.0], [72.1, 523.0], [72.2, 523.0], [72.3, 523.0], [72.4, 523.0], [72.5, 524.0], [72.6, 524.0], [72.7, 524.0], [72.8, 525.0], [72.9, 526.0], [73.0, 526.0], [73.1, 528.0], [73.2, 528.0], [73.3, 528.0], [73.4, 529.0], [73.5, 529.0], [73.6, 530.0], [73.7, 530.0], [73.8, 530.0], [73.9, 531.0], [74.0, 531.0], [74.1, 531.0], [74.2, 532.0], [74.3, 532.0], [74.4, 534.0], [74.5, 535.0], [74.6, 535.0], [74.7, 536.0], [74.8, 537.0], [74.9, 537.0], [75.0, 537.0], [75.1, 537.0], [75.2, 537.0], [75.3, 538.0], [75.4, 538.0], [75.5, 539.0], [75.6, 539.0], [75.7, 539.0], [75.8, 541.0], [75.9, 541.0], [76.0, 542.0], [76.1, 542.0], [76.2, 542.0], [76.3, 543.0], [76.4, 543.0], [76.5, 545.0], [76.6, 545.0], [76.7, 546.0], [76.8, 547.0], [76.9, 547.0], [77.0, 549.0], [77.1, 549.0], [77.2, 549.0], [77.3, 550.0], [77.4, 552.0], [77.5, 553.0], [77.6, 553.0], [77.7, 554.0], [77.8, 554.0], [77.9, 556.0], [78.0, 556.0], [78.1, 556.0], [78.2, 556.0], [78.3, 557.0], [78.4, 558.0], [78.5, 560.0], [78.6, 560.0], [78.7, 564.0], [78.8, 564.0], [78.9, 566.0], [79.0, 567.0], [79.1, 569.0], [79.2, 569.0], [79.3, 574.0], [79.4, 575.0], [79.5, 577.0], [79.6, 578.0], [79.7, 579.0], [79.8, 582.0], [79.9, 583.0], [80.0, 587.0], [80.1, 589.0], [80.2, 590.0], [80.3, 590.0], [80.4, 593.0], [80.5, 594.0], [80.6, 595.0], [80.7, 597.0], [80.8, 597.0], [80.9, 598.0], [81.0, 598.0], [81.1, 599.0], [81.2, 599.0], [81.3, 599.0], [81.4, 600.0], [81.5, 602.0], [81.6, 603.0], [81.7, 605.0], [81.8, 608.0], [81.9, 608.0], [82.0, 610.0], [82.1, 611.0], [82.2, 611.0], [82.3, 612.0], [82.4, 612.0], [82.5, 614.0], [82.6, 615.0], [82.7, 616.0], [82.8, 617.0], [82.9, 620.0], [83.0, 620.0], [83.1, 620.0], [83.2, 622.0], [83.3, 628.0], [83.4, 630.0], [83.5, 631.0], [83.6, 634.0], [83.7, 634.0], [83.8, 635.0], [83.9, 635.0], [84.0, 635.0], [84.1, 636.0], [84.2, 638.0], [84.3, 638.0], [84.4, 639.0], [84.5, 641.0], [84.6, 644.0], [84.7, 644.0], [84.8, 645.0], [84.9, 650.0], [85.0, 656.0], [85.1, 657.0], [85.2, 661.0], [85.3, 662.0], [85.4, 663.0], [85.5, 667.0], [85.6, 674.0], [85.7, 681.0], [85.8, 687.0], [85.9, 694.0], [86.0, 703.0], [86.1, 706.0], [86.2, 707.0], [86.3, 709.0], [86.4, 714.0], [86.5, 723.0], [86.6, 726.0], [86.7, 727.0], [86.8, 728.0], [86.9, 728.0], [87.0, 729.0], [87.1, 729.0], [87.2, 737.0], [87.3, 742.0], [87.4, 767.0], [87.5, 768.0], [87.6, 776.0], [87.7, 780.0], [87.8, 781.0], [87.9, 782.0], [88.0, 784.0], [88.1, 787.0], [88.2, 791.0], [88.3, 795.0], [88.4, 798.0], [88.5, 798.0], [88.6, 801.0], [88.7, 802.0], [88.8, 803.0], [88.9, 807.0], [89.0, 814.0], [89.1, 816.0], [89.2, 818.0], [89.3, 846.0], [89.4, 885.0], [89.5, 898.0], [89.6, 903.0], [89.7, 904.0], [89.8, 906.0], [89.9, 913.0], [90.0, 921.0], [90.1, 928.0], [90.2, 933.0], [90.3, 935.0], [90.4, 936.0], [90.5, 944.0], [90.6, 954.0], [90.7, 956.0], [90.8, 958.0], [90.9, 961.0], [91.0, 966.0], [91.1, 967.0], [91.2, 969.0], [91.3, 970.0], [91.4, 970.0], [91.5, 973.0], [91.6, 976.0], [91.7, 983.0], [91.8, 987.0], [91.9, 988.0], [92.0, 990.0], [92.1, 990.0], [92.2, 992.0], [92.3, 992.0], [92.4, 996.0], [92.5, 1000.0], [92.6, 1001.0], [92.7, 1001.0], [92.8, 1003.0], [92.9, 1007.0], [93.0, 1008.0], [93.1, 1009.0], [93.2, 1010.0], [93.3, 1012.0], [93.4, 1021.0], [93.5, 1022.0], [93.6, 1029.0], [93.7, 1030.0], [93.8, 1032.0], [93.9, 1041.0], [94.0, 1044.0], [94.1, 1050.0], [94.2, 1052.0], [94.3, 1056.0], [94.4, 1064.0], [94.5, 1066.0], [94.6, 1068.0], [94.7, 1071.0], [94.8, 1077.0], [94.9, 1077.0], [95.0, 1080.0], [95.1, 1087.0], [95.2, 1096.0], [95.3, 1102.0], [95.4, 1105.0], [95.5, 1111.0], [95.6, 1113.0], [95.7, 1123.0], [95.8, 1128.0], [95.9, 1136.0], [96.0, 1143.0], [96.1, 1146.0], [96.2, 1148.0], [96.3, 1154.0], [96.4, 1171.0], [96.5, 1175.0], [96.6, 1186.0], [96.7, 1188.0], [96.8, 1195.0], [96.9, 1196.0], [97.0, 1197.0], [97.1, 1206.0], [97.2, 1223.0], [97.3, 1230.0], [97.4, 1232.0], [97.5, 1232.0], [97.6, 1233.0], [97.7, 1255.0], [97.8, 1266.0], [97.9, 1282.0], [98.0, 1286.0], [98.1, 1289.0], [98.2, 1306.0], [98.3, 1313.0], [98.4, 1352.0], [98.5, 1365.0], [98.6, 1379.0], [98.7, 1464.0], [98.8, 1580.0], [98.9, 1702.0], [99.0, 1715.0], [99.1, 1720.0], [99.2, 1778.0], [99.3, 1780.0], [99.4, 1936.0], [99.5, 2009.0], [99.6, 3309.0], [99.7, 3360.0], [99.8, 3542.0], [99.9, 6128.0]], "isOverall": false, "label": "Login (post)", "isController": false}, {"data": [[0.0, 278.0], [0.1, 281.0], [0.2, 282.0], [0.3, 282.0], [0.4, 285.0], [0.5, 285.0], [0.6, 285.0], [0.7, 286.0], [0.8, 287.0], [0.9, 288.0], [1.0, 288.0], [1.1, 288.0], [1.2, 288.0], [1.3, 289.0], [1.4, 289.0], [1.5, 289.0], [1.6, 289.0], [1.7, 290.0], [1.8, 290.0], [1.9, 290.0], [2.0, 290.0], [2.1, 290.0], [2.2, 290.0], [2.3, 291.0], [2.4, 291.0], [2.5, 291.0], [2.6, 291.0], [2.7, 292.0], [2.8, 292.0], [2.9, 292.0], [3.0, 292.0], [3.1, 293.0], [3.2, 293.0], [3.3, 293.0], [3.4, 293.0], [3.5, 293.0], [3.6, 293.0], [3.7, 294.0], [3.8, 294.0], [3.9, 294.0], [4.0, 294.0], [4.1, 295.0], [4.2, 295.0], [4.3, 295.0], [4.4, 295.0], [4.5, 295.0], [4.6, 296.0], [4.7, 296.0], [4.8, 296.0], [4.9, 296.0], [5.0, 296.0], [5.1, 296.0], [5.2, 296.0], [5.3, 297.0], [5.4, 297.0], [5.5, 297.0], [5.6, 297.0], [5.7, 297.0], [5.8, 297.0], [5.9, 297.0], [6.0, 297.0], [6.1, 297.0], [6.2, 298.0], [6.3, 298.0], [6.4, 298.0], [6.5, 299.0], [6.6, 299.0], [6.7, 299.0], [6.8, 299.0], [6.9, 299.0], [7.0, 299.0], [7.1, 299.0], [7.2, 299.0], [7.3, 299.0], [7.4, 300.0], [7.5, 300.0], [7.6, 300.0], [7.7, 300.0], [7.8, 300.0], [7.9, 300.0], [8.0, 300.0], [8.1, 300.0], [8.2, 300.0], [8.3, 300.0], [8.4, 300.0], [8.5, 300.0], [8.6, 300.0], [8.7, 300.0], [8.8, 300.0], [8.9, 301.0], [9.0, 301.0], [9.1, 301.0], [9.2, 301.0], [9.3, 302.0], [9.4, 302.0], [9.5, 302.0], [9.6, 302.0], [9.7, 302.0], [9.8, 302.0], [9.9, 302.0], [10.0, 302.0], [10.1, 302.0], [10.2, 303.0], [10.3, 303.0], [10.4, 303.0], [10.5, 303.0], [10.6, 303.0], [10.7, 303.0], [10.8, 304.0], [10.9, 304.0], [11.0, 304.0], [11.1, 304.0], [11.2, 304.0], [11.3, 304.0], [11.4, 304.0], [11.5, 304.0], [11.6, 304.0], [11.7, 304.0], [11.8, 304.0], [11.9, 304.0], [12.0, 305.0], [12.1, 305.0], [12.2, 305.0], [12.3, 305.0], [12.4, 305.0], [12.5, 305.0], [12.6, 305.0], [12.7, 305.0], [12.8, 305.0], [12.9, 306.0], [13.0, 306.0], [13.1, 306.0], [13.2, 306.0], [13.3, 306.0], [13.4, 306.0], [13.5, 307.0], [13.6, 307.0], [13.7, 307.0], [13.8, 307.0], [13.9, 307.0], [14.0, 307.0], [14.1, 307.0], [14.2, 307.0], [14.3, 307.0], [14.4, 308.0], [14.5, 308.0], [14.6, 308.0], [14.7, 308.0], [14.8, 308.0], [14.9, 308.0], [15.0, 308.0], [15.1, 308.0], [15.2, 308.0], [15.3, 308.0], [15.4, 308.0], [15.5, 308.0], [15.6, 309.0], [15.7, 309.0], [15.8, 309.0], [15.9, 309.0], [16.0, 309.0], [16.1, 309.0], [16.2, 309.0], [16.3, 309.0], [16.4, 309.0], [16.5, 309.0], [16.6, 309.0], [16.7, 309.0], [16.8, 310.0], [16.9, 310.0], [17.0, 310.0], [17.1, 310.0], [17.2, 310.0], [17.3, 310.0], [17.4, 310.0], [17.5, 310.0], [17.6, 310.0], [17.7, 311.0], [17.8, 311.0], [17.9, 311.0], [18.0, 311.0], [18.1, 311.0], [18.2, 311.0], [18.3, 311.0], [18.4, 311.0], [18.5, 312.0], [18.6, 312.0], [18.7, 312.0], [18.8, 312.0], [18.9, 312.0], [19.0, 312.0], [19.1, 312.0], [19.2, 312.0], [19.3, 312.0], [19.4, 312.0], [19.5, 312.0], [19.6, 313.0], [19.7, 313.0], [19.8, 313.0], [19.9, 313.0], [20.0, 313.0], [20.1, 313.0], [20.2, 313.0], [20.3, 313.0], [20.4, 313.0], [20.5, 313.0], [20.6, 313.0], [20.7, 313.0], [20.8, 314.0], [20.9, 314.0], [21.0, 314.0], [21.1, 314.0], [21.2, 314.0], [21.3, 314.0], [21.4, 314.0], [21.5, 314.0], [21.6, 314.0], [21.7, 314.0], [21.8, 314.0], [21.9, 314.0], [22.0, 315.0], [22.1, 315.0], [22.2, 315.0], [22.3, 315.0], [22.4, 315.0], [22.5, 315.0], [22.6, 315.0], [22.7, 315.0], [22.8, 316.0], [22.9, 316.0], [23.0, 316.0], [23.1, 316.0], [23.2, 316.0], [23.3, 316.0], [23.4, 317.0], [23.5, 317.0], [23.6, 317.0], [23.7, 317.0], [23.8, 317.0], [23.9, 317.0], [24.0, 317.0], [24.1, 318.0], [24.2, 318.0], [24.3, 318.0], [24.4, 318.0], [24.5, 318.0], [24.6, 318.0], [24.7, 318.0], [24.8, 318.0], [24.9, 318.0], [25.0, 318.0], [25.1, 318.0], [25.2, 318.0], [25.3, 318.0], [25.4, 319.0], [25.5, 319.0], [25.6, 319.0], [25.7, 319.0], [25.8, 319.0], [25.9, 319.0], [26.0, 319.0], [26.1, 319.0], [26.2, 320.0], [26.3, 320.0], [26.4, 320.0], [26.5, 320.0], [26.6, 320.0], [26.7, 320.0], [26.8, 320.0], [26.9, 320.0], [27.0, 320.0], [27.1, 320.0], [27.2, 320.0], [27.3, 320.0], [27.4, 320.0], [27.5, 320.0], [27.6, 321.0], [27.7, 321.0], [27.8, 321.0], [27.9, 321.0], [28.0, 321.0], [28.1, 321.0], [28.2, 321.0], [28.3, 321.0], [28.4, 321.0], [28.5, 321.0], [28.6, 322.0], [28.7, 322.0], [28.8, 322.0], [28.9, 322.0], [29.0, 322.0], [29.1, 322.0], [29.2, 322.0], [29.3, 322.0], [29.4, 322.0], [29.5, 322.0], [29.6, 322.0], [29.7, 323.0], [29.8, 323.0], [29.9, 323.0], [30.0, 323.0], [30.1, 323.0], [30.2, 323.0], [30.3, 323.0], [30.4, 324.0], [30.5, 324.0], [30.6, 324.0], [30.7, 324.0], [30.8, 324.0], [30.9, 324.0], [31.0, 324.0], [31.1, 324.0], [31.2, 324.0], [31.3, 324.0], [31.4, 325.0], [31.5, 325.0], [31.6, 325.0], [31.7, 325.0], [31.8, 325.0], [31.9, 325.0], [32.0, 325.0], [32.1, 325.0], [32.2, 325.0], [32.3, 325.0], [32.4, 325.0], [32.5, 325.0], [32.6, 326.0], [32.7, 326.0], [32.8, 326.0], [32.9, 326.0], [33.0, 326.0], [33.1, 326.0], [33.2, 327.0], [33.3, 327.0], [33.4, 327.0], [33.5, 327.0], [33.6, 327.0], [33.7, 327.0], [33.8, 327.0], [33.9, 327.0], [34.0, 328.0], [34.1, 328.0], [34.2, 328.0], [34.3, 328.0], [34.4, 328.0], [34.5, 328.0], [34.6, 328.0], [34.7, 328.0], [34.8, 328.0], [34.9, 329.0], [35.0, 329.0], [35.1, 329.0], [35.2, 329.0], [35.3, 329.0], [35.4, 329.0], [35.5, 329.0], [35.6, 329.0], [35.7, 329.0], [35.8, 330.0], [35.9, 330.0], [36.0, 330.0], [36.1, 330.0], [36.2, 330.0], [36.3, 330.0], [36.4, 330.0], [36.5, 330.0], [36.6, 330.0], [36.7, 330.0], [36.8, 330.0], [36.9, 330.0], [37.0, 331.0], [37.1, 331.0], [37.2, 331.0], [37.3, 331.0], [37.4, 331.0], [37.5, 331.0], [37.6, 331.0], [37.7, 331.0], [37.8, 331.0], [37.9, 331.0], [38.0, 331.0], [38.1, 332.0], [38.2, 332.0], [38.3, 332.0], [38.4, 332.0], [38.5, 332.0], [38.6, 332.0], [38.7, 332.0], [38.8, 332.0], [38.9, 332.0], [39.0, 332.0], [39.1, 332.0], [39.2, 332.0], [39.3, 332.0], [39.4, 333.0], [39.5, 333.0], [39.6, 333.0], [39.7, 333.0], [39.8, 333.0], [39.9, 333.0], [40.0, 333.0], [40.1, 333.0], [40.2, 333.0], [40.3, 333.0], [40.4, 334.0], [40.5, 334.0], [40.6, 334.0], [40.7, 334.0], [40.8, 334.0], [40.9, 334.0], [41.0, 334.0], [41.1, 335.0], [41.2, 335.0], [41.3, 335.0], [41.4, 335.0], [41.5, 335.0], [41.6, 335.0], [41.7, 335.0], [41.8, 335.0], [41.9, 335.0], [42.0, 336.0], [42.1, 336.0], [42.2, 336.0], [42.3, 336.0], [42.4, 336.0], [42.5, 336.0], [42.6, 337.0], [42.7, 337.0], [42.8, 337.0], [42.9, 337.0], [43.0, 338.0], [43.1, 338.0], [43.2, 339.0], [43.3, 339.0], [43.4, 339.0], [43.5, 339.0], [43.6, 339.0], [43.7, 339.0], [43.8, 339.0], [43.9, 339.0], [44.0, 340.0], [44.1, 340.0], [44.2, 340.0], [44.3, 340.0], [44.4, 341.0], [44.5, 341.0], [44.6, 341.0], [44.7, 341.0], [44.8, 341.0], [44.9, 341.0], [45.0, 341.0], [45.1, 342.0], [45.2, 342.0], [45.3, 342.0], [45.4, 342.0], [45.5, 342.0], [45.6, 342.0], [45.7, 342.0], [45.8, 342.0], [45.9, 343.0], [46.0, 343.0], [46.1, 344.0], [46.2, 344.0], [46.3, 344.0], [46.4, 344.0], [46.5, 344.0], [46.6, 344.0], [46.7, 344.0], [46.8, 344.0], [46.9, 345.0], [47.0, 345.0], [47.1, 345.0], [47.2, 345.0], [47.3, 345.0], [47.4, 345.0], [47.5, 345.0], [47.6, 345.0], [47.7, 346.0], [47.8, 346.0], [47.9, 346.0], [48.0, 346.0], [48.1, 346.0], [48.2, 347.0], [48.3, 347.0], [48.4, 347.0], [48.5, 347.0], [48.6, 348.0], [48.7, 348.0], [48.8, 348.0], [48.9, 348.0], [49.0, 348.0], [49.1, 349.0], [49.2, 349.0], [49.3, 349.0], [49.4, 349.0], [49.5, 349.0], [49.6, 349.0], [49.7, 349.0], [49.8, 349.0], [49.9, 349.0], [50.0, 350.0], [50.1, 350.0], [50.2, 350.0], [50.3, 350.0], [50.4, 350.0], [50.5, 350.0], [50.6, 350.0], [50.7, 351.0], [50.8, 351.0], [50.9, 351.0], [51.0, 351.0], [51.1, 352.0], [51.2, 352.0], [51.3, 352.0], [51.4, 352.0], [51.5, 352.0], [51.6, 352.0], [51.7, 352.0], [51.8, 352.0], [51.9, 352.0], [52.0, 353.0], [52.1, 353.0], [52.2, 353.0], [52.3, 353.0], [52.4, 353.0], [52.5, 354.0], [52.6, 354.0], [52.7, 354.0], [52.8, 354.0], [52.9, 355.0], [53.0, 355.0], [53.1, 355.0], [53.2, 355.0], [53.3, 355.0], [53.4, 355.0], [53.5, 356.0], [53.6, 356.0], [53.7, 356.0], [53.8, 356.0], [53.9, 356.0], [54.0, 356.0], [54.1, 357.0], [54.2, 357.0], [54.3, 357.0], [54.4, 357.0], [54.5, 358.0], [54.6, 358.0], [54.7, 358.0], [54.8, 358.0], [54.9, 358.0], [55.0, 358.0], [55.1, 358.0], [55.2, 359.0], [55.3, 359.0], [55.4, 359.0], [55.5, 359.0], [55.6, 360.0], [55.7, 360.0], [55.8, 360.0], [55.9, 361.0], [56.0, 361.0], [56.1, 361.0], [56.2, 361.0], [56.3, 361.0], [56.4, 362.0], [56.5, 362.0], [56.6, 362.0], [56.7, 362.0], [56.8, 362.0], [56.9, 362.0], [57.0, 363.0], [57.1, 363.0], [57.2, 363.0], [57.3, 363.0], [57.4, 363.0], [57.5, 363.0], [57.6, 363.0], [57.7, 364.0], [57.8, 364.0], [57.9, 364.0], [58.0, 364.0], [58.1, 365.0], [58.2, 365.0], [58.3, 365.0], [58.4, 365.0], [58.5, 365.0], [58.6, 366.0], [58.7, 366.0], [58.8, 366.0], [58.9, 366.0], [59.0, 366.0], [59.1, 366.0], [59.2, 366.0], [59.3, 367.0], [59.4, 367.0], [59.5, 367.0], [59.6, 367.0], [59.7, 368.0], [59.8, 368.0], [59.9, 368.0], [60.0, 368.0], [60.1, 368.0], [60.2, 368.0], [60.3, 369.0], [60.4, 369.0], [60.5, 369.0], [60.6, 369.0], [60.7, 369.0], [60.8, 370.0], [60.9, 370.0], [61.0, 370.0], [61.1, 370.0], [61.2, 370.0], [61.3, 370.0], [61.4, 371.0], [61.5, 371.0], [61.6, 371.0], [61.7, 371.0], [61.8, 371.0], [61.9, 371.0], [62.0, 371.0], [62.1, 372.0], [62.2, 372.0], [62.3, 372.0], [62.4, 372.0], [62.5, 373.0], [62.6, 373.0], [62.7, 373.0], [62.8, 373.0], [62.9, 373.0], [63.0, 374.0], [63.1, 374.0], [63.2, 374.0], [63.3, 374.0], [63.4, 374.0], [63.5, 375.0], [63.6, 375.0], [63.7, 375.0], [63.8, 375.0], [63.9, 375.0], [64.0, 376.0], [64.1, 376.0], [64.2, 376.0], [64.3, 377.0], [64.4, 377.0], [64.5, 377.0], [64.6, 377.0], [64.7, 377.0], [64.8, 377.0], [64.9, 378.0], [65.0, 378.0], [65.1, 378.0], [65.2, 378.0], [65.3, 378.0], [65.4, 379.0], [65.5, 379.0], [65.6, 379.0], [65.7, 379.0], [65.8, 379.0], [65.9, 380.0], [66.0, 380.0], [66.1, 380.0], [66.2, 380.0], [66.3, 382.0], [66.4, 382.0], [66.5, 382.0], [66.6, 382.0], [66.7, 382.0], [66.8, 382.0], [66.9, 382.0], [67.0, 383.0], [67.1, 383.0], [67.2, 383.0], [67.3, 383.0], [67.4, 384.0], [67.5, 384.0], [67.6, 384.0], [67.7, 384.0], [67.8, 384.0], [67.9, 385.0], [68.0, 386.0], [68.1, 387.0], [68.2, 387.0], [68.3, 387.0], [68.4, 387.0], [68.5, 388.0], [68.6, 388.0], [68.7, 388.0], [68.8, 388.0], [68.9, 389.0], [69.0, 389.0], [69.1, 389.0], [69.2, 389.0], [69.3, 389.0], [69.4, 390.0], [69.5, 390.0], [69.6, 391.0], [69.7, 391.0], [69.8, 391.0], [69.9, 392.0], [70.0, 392.0], [70.1, 393.0], [70.2, 393.0], [70.3, 393.0], [70.4, 393.0], [70.5, 394.0], [70.6, 394.0], [70.7, 394.0], [70.8, 394.0], [70.9, 394.0], [71.0, 395.0], [71.1, 395.0], [71.2, 396.0], [71.3, 396.0], [71.4, 396.0], [71.5, 396.0], [71.6, 396.0], [71.7, 397.0], [71.8, 398.0], [71.9, 398.0], [72.0, 398.0], [72.1, 398.0], [72.2, 399.0], [72.3, 399.0], [72.4, 399.0], [72.5, 400.0], [72.6, 401.0], [72.7, 402.0], [72.8, 402.0], [72.9, 402.0], [73.0, 402.0], [73.1, 403.0], [73.2, 403.0], [73.3, 403.0], [73.4, 403.0], [73.5, 404.0], [73.6, 404.0], [73.7, 404.0], [73.8, 405.0], [73.9, 405.0], [74.0, 405.0], [74.1, 405.0], [74.2, 405.0], [74.3, 405.0], [74.4, 406.0], [74.5, 406.0], [74.6, 406.0], [74.7, 407.0], [74.8, 407.0], [74.9, 409.0], [75.0, 410.0], [75.1, 410.0], [75.2, 410.0], [75.3, 410.0], [75.4, 410.0], [75.5, 410.0], [75.6, 410.0], [75.7, 411.0], [75.8, 411.0], [75.9, 411.0], [76.0, 411.0], [76.1, 411.0], [76.2, 412.0], [76.3, 412.0], [76.4, 412.0], [76.5, 412.0], [76.6, 413.0], [76.7, 413.0], [76.8, 414.0], [76.9, 414.0], [77.0, 415.0], [77.1, 415.0], [77.2, 416.0], [77.3, 416.0], [77.4, 417.0], [77.5, 418.0], [77.6, 418.0], [77.7, 419.0], [77.8, 419.0], [77.9, 420.0], [78.0, 420.0], [78.1, 420.0], [78.2, 420.0], [78.3, 421.0], [78.4, 421.0], [78.5, 422.0], [78.6, 424.0], [78.7, 424.0], [78.8, 425.0], [78.9, 425.0], [79.0, 426.0], [79.1, 427.0], [79.2, 428.0], [79.3, 429.0], [79.4, 429.0], [79.5, 429.0], [79.6, 431.0], [79.7, 431.0], [79.8, 431.0], [79.9, 433.0], [80.0, 434.0], [80.1, 437.0], [80.2, 439.0], [80.3, 439.0], [80.4, 439.0], [80.5, 440.0], [80.6, 440.0], [80.7, 441.0], [80.8, 441.0], [80.9, 442.0], [81.0, 443.0], [81.1, 443.0], [81.2, 444.0], [81.3, 444.0], [81.4, 447.0], [81.5, 447.0], [81.6, 449.0], [81.7, 449.0], [81.8, 450.0], [81.9, 450.0], [82.0, 450.0], [82.1, 450.0], [82.2, 450.0], [82.3, 451.0], [82.4, 452.0], [82.5, 452.0], [82.6, 452.0], [82.7, 454.0], [82.8, 454.0], [82.9, 455.0], [83.0, 456.0], [83.1, 457.0], [83.2, 457.0], [83.3, 458.0], [83.4, 458.0], [83.5, 459.0], [83.6, 459.0], [83.7, 460.0], [83.8, 460.0], [83.9, 461.0], [84.0, 461.0], [84.1, 462.0], [84.2, 463.0], [84.3, 465.0], [84.4, 465.0], [84.5, 472.0], [84.6, 472.0], [84.7, 473.0], [84.8, 474.0], [84.9, 474.0], [85.0, 474.0], [85.1, 476.0], [85.2, 476.0], [85.3, 477.0], [85.4, 478.0], [85.5, 479.0], [85.6, 480.0], [85.7, 480.0], [85.8, 480.0], [85.9, 481.0], [86.0, 482.0], [86.1, 486.0], [86.2, 486.0], [86.3, 488.0], [86.4, 495.0], [86.5, 499.0], [86.6, 500.0], [86.7, 501.0], [86.8, 502.0], [86.9, 503.0], [87.0, 504.0], [87.1, 505.0], [87.2, 507.0], [87.3, 510.0], [87.4, 511.0], [87.5, 512.0], [87.6, 513.0], [87.7, 513.0], [87.8, 514.0], [87.9, 515.0], [88.0, 518.0], [88.1, 519.0], [88.2, 520.0], [88.3, 526.0], [88.4, 527.0], [88.5, 528.0], [88.6, 528.0], [88.7, 530.0], [88.8, 534.0], [88.9, 536.0], [89.0, 537.0], [89.1, 537.0], [89.2, 541.0], [89.3, 544.0], [89.4, 545.0], [89.5, 549.0], [89.6, 552.0], [89.7, 552.0], [89.8, 557.0], [89.9, 558.0], [90.0, 559.0], [90.1, 562.0], [90.2, 566.0], [90.3, 566.0], [90.4, 572.0], [90.5, 572.0], [90.6, 576.0], [90.7, 582.0], [90.8, 587.0], [90.9, 593.0], [91.0, 600.0], [91.1, 605.0], [91.2, 612.0], [91.3, 621.0], [91.4, 623.0], [91.5, 630.0], [91.6, 639.0], [91.7, 641.0], [91.8, 669.0], [91.9, 671.0], [92.0, 699.0], [92.1, 845.0], [92.2, 855.0], [92.3, 855.0], [92.4, 861.0], [92.5, 864.0], [92.6, 874.0], [92.7, 875.0], [92.8, 879.0], [92.9, 879.0], [93.0, 895.0], [93.1, 899.0], [93.2, 913.0], [93.3, 914.0], [93.4, 916.0], [93.5, 919.0], [93.6, 924.0], [93.7, 925.0], [93.8, 925.0], [93.9, 928.0], [94.0, 929.0], [94.1, 932.0], [94.2, 933.0], [94.3, 935.0], [94.4, 938.0], [94.5, 939.0], [94.6, 949.0], [94.7, 953.0], [94.8, 956.0], [94.9, 958.0], [95.0, 959.0], [95.1, 960.0], [95.2, 965.0], [95.3, 968.0], [95.4, 972.0], [95.5, 981.0], [95.6, 982.0], [95.7, 989.0], [95.8, 994.0], [95.9, 995.0], [96.0, 999.0], [96.1, 1003.0], [96.2, 1008.0], [96.3, 1014.0], [96.4, 1038.0], [96.5, 1039.0], [96.6, 1042.0], [96.7, 1051.0], [96.8, 1053.0], [96.9, 1069.0], [97.0, 1071.0], [97.1, 1076.0], [97.2, 1082.0], [97.3, 1092.0], [97.4, 1094.0], [97.5, 1095.0], [97.6, 1097.0], [97.7, 1099.0], [97.8, 1115.0], [97.9, 1116.0], [98.0, 1118.0], [98.1, 1146.0], [98.2, 1147.0], [98.3, 1153.0], [98.4, 1157.0], [98.5, 1163.0], [98.6, 1164.0], [98.7, 1205.0], [98.8, 1215.0], [98.9, 1217.0], [99.0, 1218.0], [99.1, 1227.0], [99.2, 1233.0], [99.3, 1302.0], [99.4, 1330.0], [99.5, 1379.0], [99.6, 1656.0], [99.7, 1694.0], [99.8, 2632.0], [99.9, 11470.0]], "isOverall": false, "label": "homepage and login/chart/data-166", "isController": false}, {"data": [[0.0, 292.0], [0.1, 295.0], [0.2, 302.0], [0.3, 302.0], [0.4, 304.0], [0.5, 305.0], [0.6, 305.0], [0.7, 306.0], [0.8, 306.0], [0.9, 307.0], [1.0, 307.0], [1.1, 309.0], [1.2, 309.0], [1.3, 310.0], [1.4, 311.0], [1.5, 311.0], [1.6, 312.0], [1.7, 312.0], [1.8, 313.0], [1.9, 313.0], [2.0, 313.0], [2.1, 314.0], [2.2, 314.0], [2.3, 314.0], [2.4, 314.0], [2.5, 315.0], [2.6, 316.0], [2.7, 316.0], [2.8, 317.0], [2.9, 318.0], [3.0, 318.0], [3.1, 318.0], [3.2, 319.0], [3.3, 319.0], [3.4, 319.0], [3.5, 319.0], [3.6, 319.0], [3.7, 319.0], [3.8, 319.0], [3.9, 319.0], [4.0, 320.0], [4.1, 320.0], [4.2, 320.0], [4.3, 321.0], [4.4, 321.0], [4.5, 321.0], [4.6, 321.0], [4.7, 322.0], [4.8, 322.0], [4.9, 322.0], [5.0, 322.0], [5.1, 322.0], [5.2, 322.0], [5.3, 323.0], [5.4, 324.0], [5.5, 324.0], [5.6, 324.0], [5.7, 324.0], [5.8, 324.0], [5.9, 325.0], [6.0, 325.0], [6.1, 325.0], [6.2, 326.0], [6.3, 326.0], [6.4, 327.0], [6.5, 327.0], [6.6, 327.0], [6.7, 328.0], [6.8, 328.0], [6.9, 328.0], [7.0, 328.0], [7.1, 329.0], [7.2, 329.0], [7.3, 329.0], [7.4, 329.0], [7.5, 330.0], [7.6, 330.0], [7.7, 330.0], [7.8, 331.0], [7.9, 331.0], [8.0, 332.0], [8.1, 332.0], [8.2, 332.0], [8.3, 332.0], [8.4, 332.0], [8.5, 332.0], [8.6, 333.0], [8.7, 333.0], [8.8, 333.0], [8.9, 333.0], [9.0, 334.0], [9.1, 334.0], [9.2, 334.0], [9.3, 334.0], [9.4, 334.0], [9.5, 335.0], [9.6, 335.0], [9.7, 335.0], [9.8, 336.0], [9.9, 336.0], [10.0, 337.0], [10.1, 337.0], [10.2, 338.0], [10.3, 338.0], [10.4, 338.0], [10.5, 338.0], [10.6, 338.0], [10.7, 338.0], [10.8, 339.0], [10.9, 339.0], [11.0, 339.0], [11.1, 339.0], [11.2, 339.0], [11.3, 340.0], [11.4, 340.0], [11.5, 340.0], [11.6, 340.0], [11.7, 340.0], [11.8, 340.0], [11.9, 340.0], [12.0, 340.0], [12.1, 341.0], [12.2, 341.0], [12.3, 341.0], [12.4, 342.0], [12.5, 342.0], [12.6, 342.0], [12.7, 342.0], [12.8, 343.0], [12.9, 343.0], [13.0, 343.0], [13.1, 343.0], [13.2, 343.0], [13.3, 344.0], [13.4, 344.0], [13.5, 344.0], [13.6, 344.0], [13.7, 345.0], [13.8, 346.0], [13.9, 346.0], [14.0, 346.0], [14.1, 346.0], [14.2, 346.0], [14.3, 346.0], [14.4, 346.0], [14.5, 347.0], [14.6, 347.0], [14.7, 347.0], [14.8, 347.0], [14.9, 348.0], [15.0, 348.0], [15.1, 349.0], [15.2, 349.0], [15.3, 349.0], [15.4, 349.0], [15.5, 349.0], [15.6, 350.0], [15.7, 350.0], [15.8, 350.0], [15.9, 350.0], [16.0, 351.0], [16.1, 351.0], [16.2, 351.0], [16.3, 351.0], [16.4, 351.0], [16.5, 352.0], [16.6, 352.0], [16.7, 352.0], [16.8, 352.0], [16.9, 352.0], [17.0, 353.0], [17.1, 353.0], [17.2, 353.0], [17.3, 354.0], [17.4, 354.0], [17.5, 354.0], [17.6, 354.0], [17.7, 355.0], [17.8, 355.0], [17.9, 355.0], [18.0, 355.0], [18.1, 356.0], [18.2, 356.0], [18.3, 356.0], [18.4, 356.0], [18.5, 357.0], [18.6, 358.0], [18.7, 358.0], [18.8, 358.0], [18.9, 359.0], [19.0, 359.0], [19.1, 359.0], [19.2, 359.0], [19.3, 360.0], [19.4, 360.0], [19.5, 360.0], [19.6, 360.0], [19.7, 360.0], [19.8, 360.0], [19.9, 361.0], [20.0, 361.0], [20.1, 361.0], [20.2, 362.0], [20.3, 362.0], [20.4, 362.0], [20.5, 362.0], [20.6, 363.0], [20.7, 363.0], [20.8, 363.0], [20.9, 364.0], [21.0, 364.0], [21.1, 364.0], [21.2, 364.0], [21.3, 365.0], [21.4, 365.0], [21.5, 365.0], [21.6, 365.0], [21.7, 365.0], [21.8, 365.0], [21.9, 366.0], [22.0, 366.0], [22.1, 366.0], [22.2, 366.0], [22.3, 366.0], [22.4, 366.0], [22.5, 367.0], [22.6, 367.0], [22.7, 368.0], [22.8, 368.0], [22.9, 368.0], [23.0, 368.0], [23.1, 369.0], [23.2, 369.0], [23.3, 369.0], [23.4, 370.0], [23.5, 370.0], [23.6, 370.0], [23.7, 370.0], [23.8, 370.0], [23.9, 371.0], [24.0, 371.0], [24.1, 372.0], [24.2, 372.0], [24.3, 372.0], [24.4, 373.0], [24.5, 373.0], [24.6, 373.0], [24.7, 373.0], [24.8, 374.0], [24.9, 374.0], [25.0, 375.0], [25.1, 375.0], [25.2, 375.0], [25.3, 375.0], [25.4, 375.0], [25.5, 376.0], [25.6, 376.0], [25.7, 376.0], [25.8, 376.0], [25.9, 377.0], [26.0, 377.0], [26.1, 377.0], [26.2, 377.0], [26.3, 378.0], [26.4, 378.0], [26.5, 379.0], [26.6, 379.0], [26.7, 379.0], [26.8, 379.0], [26.9, 380.0], [27.0, 380.0], [27.1, 380.0], [27.2, 380.0], [27.3, 381.0], [27.4, 381.0], [27.5, 382.0], [27.6, 382.0], [27.7, 382.0], [27.8, 382.0], [27.9, 383.0], [28.0, 383.0], [28.1, 383.0], [28.2, 383.0], [28.3, 383.0], [28.4, 384.0], [28.5, 384.0], [28.6, 385.0], [28.7, 385.0], [28.8, 385.0], [28.9, 385.0], [29.0, 385.0], [29.1, 385.0], [29.2, 386.0], [29.3, 386.0], [29.4, 387.0], [29.5, 387.0], [29.6, 388.0], [29.7, 388.0], [29.8, 388.0], [29.9, 388.0], [30.0, 388.0], [30.1, 389.0], [30.2, 389.0], [30.3, 389.0], [30.4, 390.0], [30.5, 390.0], [30.6, 390.0], [30.7, 391.0], [30.8, 391.0], [30.9, 391.0], [31.0, 391.0], [31.1, 392.0], [31.2, 392.0], [31.3, 392.0], [31.4, 393.0], [31.5, 394.0], [31.6, 394.0], [31.7, 394.0], [31.8, 395.0], [31.9, 395.0], [32.0, 395.0], [32.1, 395.0], [32.2, 395.0], [32.3, 396.0], [32.4, 396.0], [32.5, 396.0], [32.6, 396.0], [32.7, 397.0], [32.8, 397.0], [32.9, 397.0], [33.0, 398.0], [33.1, 398.0], [33.2, 400.0], [33.3, 400.0], [33.4, 400.0], [33.5, 401.0], [33.6, 402.0], [33.7, 402.0], [33.8, 403.0], [33.9, 403.0], [34.0, 403.0], [34.1, 405.0], [34.2, 405.0], [34.3, 405.0], [34.4, 406.0], [34.5, 407.0], [34.6, 407.0], [34.7, 407.0], [34.8, 407.0], [34.9, 410.0], [35.0, 410.0], [35.1, 411.0], [35.2, 411.0], [35.3, 412.0], [35.4, 412.0], [35.5, 413.0], [35.6, 413.0], [35.7, 414.0], [35.8, 414.0], [35.9, 415.0], [36.0, 415.0], [36.1, 416.0], [36.2, 417.0], [36.3, 417.0], [36.4, 417.0], [36.5, 418.0], [36.6, 419.0], [36.7, 419.0], [36.8, 419.0], [36.9, 419.0], [37.0, 420.0], [37.1, 421.0], [37.2, 423.0], [37.3, 424.0], [37.4, 424.0], [37.5, 424.0], [37.6, 424.0], [37.7, 425.0], [37.8, 428.0], [37.9, 428.0], [38.0, 429.0], [38.1, 429.0], [38.2, 429.0], [38.3, 430.0], [38.4, 432.0], [38.5, 432.0], [38.6, 434.0], [38.7, 434.0], [38.8, 436.0], [38.9, 436.0], [39.0, 437.0], [39.1, 437.0], [39.2, 437.0], [39.3, 438.0], [39.4, 438.0], [39.5, 438.0], [39.6, 439.0], [39.7, 440.0], [39.8, 444.0], [39.9, 445.0], [40.0, 450.0], [40.1, 455.0], [40.2, 456.0], [40.3, 456.0], [40.4, 457.0], [40.5, 457.0], [40.6, 459.0], [40.7, 459.0], [40.8, 461.0], [40.9, 462.0], [41.0, 467.0], [41.1, 468.0], [41.2, 468.0], [41.3, 469.0], [41.4, 472.0], [41.5, 478.0], [41.6, 480.0], [41.7, 481.0], [41.8, 482.0], [41.9, 482.0], [42.0, 483.0], [42.1, 484.0], [42.2, 484.0], [42.3, 486.0], [42.4, 487.0], [42.5, 487.0], [42.6, 493.0], [42.7, 496.0], [42.8, 497.0], [42.9, 499.0], [43.0, 502.0], [43.1, 503.0], [43.2, 505.0], [43.3, 506.0], [43.4, 506.0], [43.5, 510.0], [43.6, 510.0], [43.7, 511.0], [43.8, 514.0], [43.9, 514.0], [44.0, 515.0], [44.1, 516.0], [44.2, 517.0], [44.3, 518.0], [44.4, 518.0], [44.5, 522.0], [44.6, 526.0], [44.7, 528.0], [44.8, 532.0], [44.9, 533.0], [45.0, 534.0], [45.1, 535.0], [45.2, 535.0], [45.3, 537.0], [45.4, 539.0], [45.5, 544.0], [45.6, 548.0], [45.7, 549.0], [45.8, 549.0], [45.9, 550.0], [46.0, 552.0], [46.1, 552.0], [46.2, 554.0], [46.3, 554.0], [46.4, 554.0], [46.5, 555.0], [46.6, 556.0], [46.7, 556.0], [46.8, 557.0], [46.9, 557.0], [47.0, 558.0], [47.1, 559.0], [47.2, 562.0], [47.3, 562.0], [47.4, 562.0], [47.5, 563.0], [47.6, 563.0], [47.7, 564.0], [47.8, 564.0], [47.9, 564.0], [48.0, 564.0], [48.1, 566.0], [48.2, 566.0], [48.3, 566.0], [48.4, 567.0], [48.5, 567.0], [48.6, 567.0], [48.7, 568.0], [48.8, 568.0], [48.9, 569.0], [49.0, 569.0], [49.1, 569.0], [49.2, 569.0], [49.3, 569.0], [49.4, 570.0], [49.5, 570.0], [49.6, 571.0], [49.7, 572.0], [49.8, 573.0], [49.9, 576.0], [50.0, 576.0], [50.1, 576.0], [50.2, 577.0], [50.3, 577.0], [50.4, 578.0], [50.5, 578.0], [50.6, 578.0], [50.7, 578.0], [50.8, 579.0], [50.9, 579.0], [51.0, 580.0], [51.1, 580.0], [51.2, 580.0], [51.3, 581.0], [51.4, 581.0], [51.5, 581.0], [51.6, 581.0], [51.7, 581.0], [51.8, 582.0], [51.9, 582.0], [52.0, 582.0], [52.1, 582.0], [52.2, 583.0], [52.3, 584.0], [52.4, 585.0], [52.5, 585.0], [52.6, 587.0], [52.7, 587.0], [52.8, 587.0], [52.9, 587.0], [53.0, 587.0], [53.1, 588.0], [53.2, 588.0], [53.3, 588.0], [53.4, 589.0], [53.5, 589.0], [53.6, 589.0], [53.7, 589.0], [53.8, 590.0], [53.9, 590.0], [54.0, 590.0], [54.1, 590.0], [54.2, 590.0], [54.3, 591.0], [54.4, 591.0], [54.5, 591.0], [54.6, 592.0], [54.7, 594.0], [54.8, 594.0], [54.9, 594.0], [55.0, 595.0], [55.1, 595.0], [55.2, 595.0], [55.3, 596.0], [55.4, 596.0], [55.5, 596.0], [55.6, 597.0], [55.7, 598.0], [55.8, 598.0], [55.9, 598.0], [56.0, 599.0], [56.1, 599.0], [56.2, 599.0], [56.3, 600.0], [56.4, 600.0], [56.5, 601.0], [56.6, 601.0], [56.7, 601.0], [56.8, 602.0], [56.9, 602.0], [57.0, 603.0], [57.1, 603.0], [57.2, 604.0], [57.3, 604.0], [57.4, 605.0], [57.5, 605.0], [57.6, 605.0], [57.7, 606.0], [57.8, 607.0], [57.9, 607.0], [58.0, 607.0], [58.1, 607.0], [58.2, 608.0], [58.3, 608.0], [58.4, 608.0], [58.5, 609.0], [58.6, 609.0], [58.7, 609.0], [58.8, 609.0], [58.9, 610.0], [59.0, 610.0], [59.1, 611.0], [59.2, 612.0], [59.3, 612.0], [59.4, 612.0], [59.5, 612.0], [59.6, 612.0], [59.7, 613.0], [59.8, 613.0], [59.9, 614.0], [60.0, 614.0], [60.1, 615.0], [60.2, 615.0], [60.3, 616.0], [60.4, 616.0], [60.5, 616.0], [60.6, 616.0], [60.7, 616.0], [60.8, 616.0], [60.9, 617.0], [61.0, 617.0], [61.1, 618.0], [61.2, 618.0], [61.3, 618.0], [61.4, 618.0], [61.5, 619.0], [61.6, 620.0], [61.7, 620.0], [61.8, 620.0], [61.9, 620.0], [62.0, 620.0], [62.1, 621.0], [62.2, 621.0], [62.3, 623.0], [62.4, 623.0], [62.5, 623.0], [62.6, 623.0], [62.7, 624.0], [62.8, 624.0], [62.9, 625.0], [63.0, 625.0], [63.1, 625.0], [63.2, 625.0], [63.3, 625.0], [63.4, 626.0], [63.5, 626.0], [63.6, 627.0], [63.7, 628.0], [63.8, 631.0], [63.9, 632.0], [64.0, 632.0], [64.1, 632.0], [64.2, 633.0], [64.3, 633.0], [64.4, 634.0], [64.5, 634.0], [64.6, 635.0], [64.7, 635.0], [64.8, 635.0], [64.9, 635.0], [65.0, 636.0], [65.1, 636.0], [65.2, 636.0], [65.3, 637.0], [65.4, 638.0], [65.5, 638.0], [65.6, 638.0], [65.7, 640.0], [65.8, 640.0], [65.9, 640.0], [66.0, 640.0], [66.1, 641.0], [66.2, 641.0], [66.3, 641.0], [66.4, 641.0], [66.5, 641.0], [66.6, 642.0], [66.7, 642.0], [66.8, 642.0], [66.9, 642.0], [67.0, 643.0], [67.1, 643.0], [67.2, 644.0], [67.3, 644.0], [67.4, 646.0], [67.5, 647.0], [67.6, 647.0], [67.7, 648.0], [67.8, 648.0], [67.9, 650.0], [68.0, 651.0], [68.1, 652.0], [68.2, 652.0], [68.3, 652.0], [68.4, 654.0], [68.5, 654.0], [68.6, 655.0], [68.7, 655.0], [68.8, 655.0], [68.9, 655.0], [69.0, 656.0], [69.1, 657.0], [69.2, 657.0], [69.3, 659.0], [69.4, 659.0], [69.5, 661.0], [69.6, 662.0], [69.7, 662.0], [69.8, 662.0], [69.9, 662.0], [70.0, 665.0], [70.1, 666.0], [70.2, 666.0], [70.3, 671.0], [70.4, 673.0], [70.5, 673.0], [70.6, 675.0], [70.7, 677.0], [70.8, 680.0], [70.9, 680.0], [71.0, 685.0], [71.1, 686.0], [71.2, 688.0], [71.3, 690.0], [71.4, 692.0], [71.5, 695.0], [71.6, 697.0], [71.7, 699.0], [71.8, 699.0], [71.9, 699.0], [72.0, 699.0], [72.1, 701.0], [72.2, 702.0], [72.3, 703.0], [72.4, 704.0], [72.5, 710.0], [72.6, 714.0], [72.7, 714.0], [72.8, 714.0], [72.9, 716.0], [73.0, 717.0], [73.1, 719.0], [73.2, 720.0], [73.3, 722.0], [73.4, 723.0], [73.5, 723.0], [73.6, 734.0], [73.7, 736.0], [73.8, 739.0], [73.9, 739.0], [74.0, 739.0], [74.1, 740.0], [74.2, 741.0], [74.3, 744.0], [74.4, 755.0], [74.5, 758.0], [74.6, 764.0], [74.7, 768.0], [74.8, 769.0], [74.9, 770.0], [75.0, 770.0], [75.1, 771.0], [75.2, 771.0], [75.3, 776.0], [75.4, 778.0], [75.5, 784.0], [75.6, 786.0], [75.7, 788.0], [75.8, 792.0], [75.9, 794.0], [76.0, 804.0], [76.1, 804.0], [76.2, 805.0], [76.3, 806.0], [76.4, 807.0], [76.5, 812.0], [76.6, 812.0], [76.7, 813.0], [76.8, 818.0], [76.9, 820.0], [77.0, 822.0], [77.1, 826.0], [77.2, 826.0], [77.3, 827.0], [77.4, 829.0], [77.5, 830.0], [77.6, 831.0], [77.7, 848.0], [77.8, 848.0], [77.9, 849.0], [78.0, 851.0], [78.1, 852.0], [78.2, 853.0], [78.3, 853.0], [78.4, 855.0], [78.5, 855.0], [78.6, 855.0], [78.7, 858.0], [78.8, 860.0], [78.9, 864.0], [79.0, 869.0], [79.1, 872.0], [79.2, 879.0], [79.3, 880.0], [79.4, 886.0], [79.5, 899.0], [79.6, 901.0], [79.7, 903.0], [79.8, 915.0], [79.9, 917.0], [80.0, 921.0], [80.1, 922.0], [80.2, 922.0], [80.3, 933.0], [80.4, 934.0], [80.5, 936.0], [80.6, 937.0], [80.7, 938.0], [80.8, 941.0], [80.9, 942.0], [81.0, 942.0], [81.1, 943.0], [81.2, 945.0], [81.3, 949.0], [81.4, 956.0], [81.5, 956.0], [81.6, 961.0], [81.7, 964.0], [81.8, 967.0], [81.9, 968.0], [82.0, 970.0], [82.1, 971.0], [82.2, 976.0], [82.3, 985.0], [82.4, 986.0], [82.5, 992.0], [82.6, 993.0], [82.7, 996.0], [82.8, 997.0], [82.9, 999.0], [83.0, 1010.0], [83.1, 1022.0], [83.2, 1025.0], [83.3, 1027.0], [83.4, 1034.0], [83.5, 1034.0], [83.6, 1034.0], [83.7, 1041.0], [83.8, 1053.0], [83.9, 1061.0], [84.0, 1061.0], [84.1, 1066.0], [84.2, 1067.0], [84.3, 1073.0], [84.4, 1086.0], [84.5, 1106.0], [84.6, 1111.0], [84.7, 1124.0], [84.8, 1127.0], [84.9, 1139.0], [85.0, 1141.0], [85.1, 1147.0], [85.2, 1190.0], [85.3, 1195.0], [85.4, 1208.0], [85.5, 1208.0], [85.6, 1226.0], [85.7, 1238.0], [85.8, 1240.0], [85.9, 1240.0], [86.0, 1254.0], [86.1, 1259.0], [86.2, 1260.0], [86.3, 1261.0], [86.4, 1268.0], [86.5, 1278.0], [86.6, 1281.0], [86.7, 1284.0], [86.8, 1285.0], [86.9, 1291.0], [87.0, 1293.0], [87.1, 1309.0], [87.2, 1311.0], [87.3, 1326.0], [87.4, 1334.0], [87.5, 1343.0], [87.6, 1347.0], [87.7, 1352.0], [87.8, 1358.0], [87.9, 1363.0], [88.0, 1364.0], [88.1, 1369.0], [88.2, 1390.0], [88.3, 1398.0], [88.4, 1400.0], [88.5, 1402.0], [88.6, 1404.0], [88.7, 1410.0], [88.8, 1411.0], [88.9, 1412.0], [89.0, 1432.0], [89.1, 1450.0], [89.2, 1458.0], [89.3, 1466.0], [89.4, 1471.0], [89.5, 1472.0], [89.6, 1489.0], [89.7, 1491.0], [89.8, 1510.0], [89.9, 1511.0], [90.0, 1523.0], [90.1, 1525.0], [90.2, 1571.0], [90.3, 1574.0], [90.4, 1583.0], [90.5, 1587.0], [90.6, 1588.0], [90.7, 1596.0], [90.8, 1599.0], [90.9, 1608.0], [91.0, 1612.0], [91.1, 1613.0], [91.2, 1614.0], [91.3, 1619.0], [91.4, 1624.0], [91.5, 1629.0], [91.6, 1643.0], [91.7, 1649.0], [91.8, 1654.0], [91.9, 1664.0], [92.0, 1697.0], [92.1, 1706.0], [92.2, 1709.0], [92.3, 1725.0], [92.4, 1726.0], [92.5, 1731.0], [92.6, 1737.0], [92.7, 1741.0], [92.8, 1771.0], [92.9, 1772.0], [93.0, 1779.0], [93.1, 1782.0], [93.2, 1792.0], [93.3, 1815.0], [93.4, 1818.0], [93.5, 1821.0], [93.6, 1847.0], [93.7, 1849.0], [93.8, 1858.0], [93.9, 1870.0], [94.0, 1879.0], [94.1, 1894.0], [94.2, 1921.0], [94.3, 1924.0], [94.4, 1934.0], [94.5, 1938.0], [94.6, 1946.0], [94.7, 1950.0], [94.8, 1964.0], [94.9, 1967.0], [95.0, 1973.0], [95.1, 1985.0], [95.2, 2001.0], [95.3, 2006.0], [95.4, 2012.0], [95.5, 2078.0], [95.6, 2085.0], [95.7, 2108.0], [95.8, 2111.0], [95.9, 2144.0], [96.0, 2206.0], [96.1, 2227.0], [96.2, 2237.0], [96.3, 2258.0], [96.4, 2273.0], [96.5, 2276.0], [96.6, 2341.0], [96.7, 2358.0], [96.8, 2372.0], [96.9, 2455.0], [97.0, 2495.0], [97.1, 2532.0], [97.2, 2538.0], [97.3, 2539.0], [97.4, 2586.0], [97.5, 2587.0], [97.6, 2609.0], [97.7, 2669.0], [97.8, 2684.0], [97.9, 2695.0], [98.0, 2706.0], [98.1, 2733.0], [98.2, 2764.0], [98.3, 2793.0], [98.4, 2802.0], [98.5, 2858.0], [98.6, 2862.0], [98.7, 2978.0], [98.8, 3195.0], [98.9, 3201.0], [99.0, 3264.0], [99.1, 3297.0], [99.2, 3480.0], [99.3, 3562.0], [99.4, 3573.0], [99.5, 3608.0], [99.6, 3704.0], [99.7, 4758.0], [99.8, 5561.0], [99.9, 6230.0]], "isOverall": false, "label": "home page ", "isController": false}, {"data": [[0.0, 495.0], [0.1, 499.0], [0.2, 501.0], [0.3, 501.0], [0.4, 505.0], [0.5, 506.0], [0.6, 507.0], [0.7, 508.0], [0.8, 508.0], [0.9, 508.0], [1.0, 508.0], [1.1, 508.0], [1.2, 509.0], [1.3, 509.0], [1.4, 511.0], [1.5, 511.0], [1.6, 511.0], [1.7, 512.0], [1.8, 512.0], [1.9, 512.0], [2.0, 513.0], [2.1, 513.0], [2.2, 514.0], [2.3, 514.0], [2.4, 514.0], [2.5, 515.0], [2.6, 515.0], [2.7, 516.0], [2.8, 516.0], [2.9, 516.0], [3.0, 517.0], [3.1, 517.0], [3.2, 517.0], [3.3, 517.0], [3.4, 518.0], [3.5, 518.0], [3.6, 519.0], [3.7, 519.0], [3.8, 519.0], [3.9, 519.0], [4.0, 519.0], [4.1, 519.0], [4.2, 519.0], [4.3, 520.0], [4.4, 520.0], [4.5, 520.0], [4.6, 520.0], [4.7, 520.0], [4.8, 520.0], [4.9, 521.0], [5.0, 521.0], [5.1, 522.0], [5.2, 522.0], [5.3, 522.0], [5.4, 522.0], [5.5, 523.0], [5.6, 523.0], [5.7, 523.0], [5.8, 524.0], [5.9, 524.0], [6.0, 524.0], [6.1, 524.0], [6.2, 525.0], [6.3, 525.0], [6.4, 525.0], [6.5, 525.0], [6.6, 525.0], [6.7, 525.0], [6.8, 525.0], [6.9, 525.0], [7.0, 526.0], [7.1, 526.0], [7.2, 526.0], [7.3, 526.0], [7.4, 526.0], [7.5, 526.0], [7.6, 526.0], [7.7, 527.0], [7.8, 527.0], [7.9, 527.0], [8.0, 528.0], [8.1, 528.0], [8.2, 528.0], [8.3, 528.0], [8.4, 528.0], [8.5, 528.0], [8.6, 529.0], [8.7, 529.0], [8.8, 529.0], [8.9, 529.0], [9.0, 529.0], [9.1, 529.0], [9.2, 529.0], [9.3, 529.0], [9.4, 529.0], [9.5, 530.0], [9.6, 530.0], [9.7, 530.0], [9.8, 530.0], [9.9, 530.0], [10.0, 530.0], [10.1, 530.0], [10.2, 530.0], [10.3, 530.0], [10.4, 530.0], [10.5, 531.0], [10.6, 531.0], [10.7, 531.0], [10.8, 531.0], [10.9, 531.0], [11.0, 531.0], [11.1, 531.0], [11.2, 531.0], [11.3, 532.0], [11.4, 532.0], [11.5, 532.0], [11.6, 532.0], [11.7, 532.0], [11.8, 533.0], [11.9, 533.0], [12.0, 533.0], [12.1, 533.0], [12.2, 534.0], [12.3, 534.0], [12.4, 534.0], [12.5, 534.0], [12.6, 534.0], [12.7, 534.0], [12.8, 534.0], [12.9, 534.0], [13.0, 535.0], [13.1, 535.0], [13.2, 535.0], [13.3, 535.0], [13.4, 535.0], [13.5, 535.0], [13.6, 536.0], [13.7, 536.0], [13.8, 536.0], [13.9, 536.0], [14.0, 536.0], [14.1, 536.0], [14.2, 537.0], [14.3, 537.0], [14.4, 537.0], [14.5, 537.0], [14.6, 537.0], [14.7, 537.0], [14.8, 537.0], [14.9, 537.0], [15.0, 537.0], [15.1, 537.0], [15.2, 538.0], [15.3, 538.0], [15.4, 538.0], [15.5, 538.0], [15.6, 539.0], [15.7, 539.0], [15.8, 539.0], [15.9, 539.0], [16.0, 539.0], [16.1, 539.0], [16.2, 539.0], [16.3, 539.0], [16.4, 539.0], [16.5, 539.0], [16.6, 540.0], [16.7, 540.0], [16.8, 540.0], [16.9, 540.0], [17.0, 540.0], [17.1, 540.0], [17.2, 540.0], [17.3, 540.0], [17.4, 540.0], [17.5, 541.0], [17.6, 541.0], [17.7, 541.0], [17.8, 541.0], [17.9, 542.0], [18.0, 542.0], [18.1, 542.0], [18.2, 542.0], [18.3, 543.0], [18.4, 543.0], [18.5, 543.0], [18.6, 543.0], [18.7, 543.0], [18.8, 543.0], [18.9, 544.0], [19.0, 544.0], [19.1, 544.0], [19.2, 544.0], [19.3, 544.0], [19.4, 544.0], [19.5, 544.0], [19.6, 544.0], [19.7, 544.0], [19.8, 544.0], [19.9, 544.0], [20.0, 544.0], [20.1, 544.0], [20.2, 545.0], [20.3, 545.0], [20.4, 545.0], [20.5, 545.0], [20.6, 545.0], [20.7, 545.0], [20.8, 545.0], [20.9, 546.0], [21.0, 546.0], [21.1, 546.0], [21.2, 546.0], [21.3, 546.0], [21.4, 546.0], [21.5, 546.0], [21.6, 546.0], [21.7, 546.0], [21.8, 546.0], [21.9, 546.0], [22.0, 547.0], [22.1, 547.0], [22.2, 547.0], [22.3, 548.0], [22.4, 548.0], [22.5, 548.0], [22.6, 548.0], [22.7, 548.0], [22.8, 548.0], [22.9, 548.0], [23.0, 549.0], [23.1, 549.0], [23.2, 549.0], [23.3, 549.0], [23.4, 549.0], [23.5, 549.0], [23.6, 549.0], [23.7, 549.0], [23.8, 549.0], [23.9, 549.0], [24.0, 549.0], [24.1, 549.0], [24.2, 549.0], [24.3, 549.0], [24.4, 550.0], [24.5, 550.0], [24.6, 550.0], [24.7, 550.0], [24.8, 550.0], [24.9, 550.0], [25.0, 550.0], [25.1, 550.0], [25.2, 550.0], [25.3, 550.0], [25.4, 550.0], [25.5, 550.0], [25.6, 551.0], [25.7, 551.0], [25.8, 551.0], [25.9, 551.0], [26.0, 551.0], [26.1, 551.0], [26.2, 551.0], [26.3, 552.0], [26.4, 552.0], [26.5, 552.0], [26.6, 552.0], [26.7, 552.0], [26.8, 552.0], [26.9, 552.0], [27.0, 553.0], [27.1, 553.0], [27.2, 553.0], [27.3, 553.0], [27.4, 553.0], [27.5, 553.0], [27.6, 553.0], [27.7, 554.0], [27.8, 554.0], [27.9, 554.0], [28.0, 554.0], [28.1, 555.0], [28.2, 555.0], [28.3, 555.0], [28.4, 555.0], [28.5, 555.0], [28.6, 555.0], [28.7, 555.0], [28.8, 556.0], [28.9, 556.0], [29.0, 556.0], [29.1, 556.0], [29.2, 556.0], [29.3, 556.0], [29.4, 556.0], [29.5, 556.0], [29.6, 556.0], [29.7, 557.0], [29.8, 557.0], [29.9, 557.0], [30.0, 558.0], [30.1, 558.0], [30.2, 558.0], [30.3, 558.0], [30.4, 558.0], [30.5, 558.0], [30.6, 558.0], [30.7, 558.0], [30.8, 558.0], [30.9, 558.0], [31.0, 558.0], [31.1, 558.0], [31.2, 558.0], [31.3, 558.0], [31.4, 559.0], [31.5, 559.0], [31.6, 559.0], [31.7, 559.0], [31.8, 559.0], [31.9, 560.0], [32.0, 560.0], [32.1, 560.0], [32.2, 560.0], [32.3, 560.0], [32.4, 560.0], [32.5, 560.0], [32.6, 561.0], [32.7, 561.0], [32.8, 561.0], [32.9, 561.0], [33.0, 561.0], [33.1, 561.0], [33.2, 561.0], [33.3, 562.0], [33.4, 562.0], [33.5, 562.0], [33.6, 562.0], [33.7, 562.0], [33.8, 562.0], [33.9, 562.0], [34.0, 562.0], [34.1, 563.0], [34.2, 563.0], [34.3, 563.0], [34.4, 563.0], [34.5, 563.0], [34.6, 564.0], [34.7, 564.0], [34.8, 564.0], [34.9, 564.0], [35.0, 564.0], [35.1, 564.0], [35.2, 564.0], [35.3, 564.0], [35.4, 564.0], [35.5, 564.0], [35.6, 564.0], [35.7, 564.0], [35.8, 565.0], [35.9, 565.0], [36.0, 565.0], [36.1, 565.0], [36.2, 565.0], [36.3, 565.0], [36.4, 565.0], [36.5, 565.0], [36.6, 565.0], [36.7, 565.0], [36.8, 566.0], [36.9, 567.0], [37.0, 567.0], [37.1, 567.0], [37.2, 567.0], [37.3, 567.0], [37.4, 567.0], [37.5, 567.0], [37.6, 567.0], [37.7, 567.0], [37.8, 567.0], [37.9, 568.0], [38.0, 568.0], [38.1, 568.0], [38.2, 568.0], [38.3, 568.0], [38.4, 568.0], [38.5, 569.0], [38.6, 569.0], [38.7, 569.0], [38.8, 570.0], [38.9, 570.0], [39.0, 570.0], [39.1, 570.0], [39.2, 570.0], [39.3, 571.0], [39.4, 571.0], [39.5, 571.0], [39.6, 572.0], [39.7, 572.0], [39.8, 572.0], [39.9, 572.0], [40.0, 572.0], [40.1, 572.0], [40.2, 572.0], [40.3, 573.0], [40.4, 573.0], [40.5, 573.0], [40.6, 573.0], [40.7, 573.0], [40.8, 573.0], [40.9, 573.0], [41.0, 574.0], [41.1, 574.0], [41.2, 574.0], [41.3, 574.0], [41.4, 574.0], [41.5, 574.0], [41.6, 574.0], [41.7, 575.0], [41.8, 575.0], [41.9, 575.0], [42.0, 575.0], [42.1, 575.0], [42.2, 575.0], [42.3, 575.0], [42.4, 575.0], [42.5, 575.0], [42.6, 575.0], [42.7, 575.0], [42.8, 575.0], [42.9, 576.0], [43.0, 576.0], [43.1, 576.0], [43.2, 576.0], [43.3, 576.0], [43.4, 577.0], [43.5, 577.0], [43.6, 578.0], [43.7, 578.0], [43.8, 578.0], [43.9, 579.0], [44.0, 579.0], [44.1, 579.0], [44.2, 579.0], [44.3, 579.0], [44.4, 580.0], [44.5, 580.0], [44.6, 580.0], [44.7, 580.0], [44.8, 580.0], [44.9, 581.0], [45.0, 582.0], [45.1, 582.0], [45.2, 582.0], [45.3, 582.0], [45.4, 582.0], [45.5, 582.0], [45.6, 582.0], [45.7, 582.0], [45.8, 582.0], [45.9, 582.0], [46.0, 583.0], [46.1, 583.0], [46.2, 583.0], [46.3, 583.0], [46.4, 584.0], [46.5, 584.0], [46.6, 585.0], [46.7, 585.0], [46.8, 585.0], [46.9, 585.0], [47.0, 585.0], [47.1, 586.0], [47.2, 586.0], [47.3, 586.0], [47.4, 586.0], [47.5, 586.0], [47.6, 586.0], [47.7, 586.0], [47.8, 586.0], [47.9, 587.0], [48.0, 587.0], [48.1, 588.0], [48.2, 588.0], [48.3, 588.0], [48.4, 588.0], [48.5, 588.0], [48.6, 588.0], [48.7, 588.0], [48.8, 588.0], [48.9, 589.0], [49.0, 589.0], [49.1, 590.0], [49.2, 590.0], [49.3, 590.0], [49.4, 590.0], [49.5, 590.0], [49.6, 590.0], [49.7, 591.0], [49.8, 591.0], [49.9, 592.0], [50.0, 592.0], [50.1, 592.0], [50.2, 592.0], [50.3, 592.0], [50.4, 593.0], [50.5, 593.0], [50.6, 593.0], [50.7, 594.0], [50.8, 594.0], [50.9, 594.0], [51.0, 594.0], [51.1, 594.0], [51.2, 595.0], [51.3, 595.0], [51.4, 595.0], [51.5, 596.0], [51.6, 596.0], [51.7, 597.0], [51.8, 597.0], [51.9, 598.0], [52.0, 598.0], [52.1, 599.0], [52.2, 599.0], [52.3, 599.0], [52.4, 600.0], [52.5, 600.0], [52.6, 600.0], [52.7, 600.0], [52.8, 600.0], [52.9, 601.0], [53.0, 602.0], [53.1, 602.0], [53.2, 602.0], [53.3, 602.0], [53.4, 603.0], [53.5, 604.0], [53.6, 604.0], [53.7, 605.0], [53.8, 605.0], [53.9, 605.0], [54.0, 605.0], [54.1, 606.0], [54.2, 607.0], [54.3, 607.0], [54.4, 607.0], [54.5, 608.0], [54.6, 609.0], [54.7, 610.0], [54.8, 610.0], [54.9, 610.0], [55.0, 611.0], [55.1, 611.0], [55.2, 611.0], [55.3, 611.0], [55.4, 611.0], [55.5, 611.0], [55.6, 612.0], [55.7, 613.0], [55.8, 613.0], [55.9, 613.0], [56.0, 614.0], [56.1, 615.0], [56.2, 616.0], [56.3, 616.0], [56.4, 617.0], [56.5, 618.0], [56.6, 618.0], [56.7, 619.0], [56.8, 619.0], [56.9, 620.0], [57.0, 620.0], [57.1, 620.0], [57.2, 620.0], [57.3, 621.0], [57.4, 623.0], [57.5, 623.0], [57.6, 623.0], [57.7, 624.0], [57.8, 626.0], [57.9, 626.0], [58.0, 626.0], [58.1, 626.0], [58.2, 627.0], [58.3, 627.0], [58.4, 628.0], [58.5, 628.0], [58.6, 628.0], [58.7, 629.0], [58.8, 631.0], [58.9, 632.0], [59.0, 635.0], [59.1, 635.0], [59.2, 636.0], [59.3, 637.0], [59.4, 638.0], [59.5, 638.0], [59.6, 639.0], [59.7, 639.0], [59.8, 640.0], [59.9, 640.0], [60.0, 640.0], [60.1, 641.0], [60.2, 641.0], [60.3, 642.0], [60.4, 642.0], [60.5, 643.0], [60.6, 643.0], [60.7, 643.0], [60.8, 643.0], [60.9, 644.0], [61.0, 646.0], [61.1, 646.0], [61.2, 646.0], [61.3, 646.0], [61.4, 647.0], [61.5, 647.0], [61.6, 649.0], [61.7, 650.0], [61.8, 650.0], [61.9, 652.0], [62.0, 653.0], [62.1, 653.0], [62.2, 653.0], [62.3, 653.0], [62.4, 654.0], [62.5, 654.0], [62.6, 655.0], [62.7, 655.0], [62.8, 655.0], [62.9, 655.0], [63.0, 656.0], [63.1, 656.0], [63.2, 656.0], [63.3, 659.0], [63.4, 659.0], [63.5, 659.0], [63.6, 660.0], [63.7, 660.0], [63.8, 662.0], [63.9, 665.0], [64.0, 667.0], [64.1, 667.0], [64.2, 667.0], [64.3, 667.0], [64.4, 668.0], [64.5, 668.0], [64.6, 669.0], [64.7, 670.0], [64.8, 670.0], [64.9, 670.0], [65.0, 672.0], [65.1, 673.0], [65.2, 674.0], [65.3, 675.0], [65.4, 676.0], [65.5, 676.0], [65.6, 676.0], [65.7, 676.0], [65.8, 677.0], [65.9, 677.0], [66.0, 678.0], [66.1, 679.0], [66.2, 679.0], [66.3, 680.0], [66.4, 683.0], [66.5, 684.0], [66.6, 686.0], [66.7, 686.0], [66.8, 688.0], [66.9, 688.0], [67.0, 691.0], [67.1, 692.0], [67.2, 692.0], [67.3, 693.0], [67.4, 693.0], [67.5, 693.0], [67.6, 694.0], [67.7, 694.0], [67.8, 696.0], [67.9, 697.0], [68.0, 698.0], [68.1, 700.0], [68.2, 701.0], [68.3, 702.0], [68.4, 702.0], [68.5, 703.0], [68.6, 703.0], [68.7, 704.0], [68.8, 705.0], [68.9, 705.0], [69.0, 706.0], [69.1, 707.0], [69.2, 710.0], [69.3, 710.0], [69.4, 711.0], [69.5, 711.0], [69.6, 711.0], [69.7, 713.0], [69.8, 713.0], [69.9, 713.0], [70.0, 718.0], [70.1, 719.0], [70.2, 719.0], [70.3, 720.0], [70.4, 720.0], [70.5, 721.0], [70.6, 722.0], [70.7, 723.0], [70.8, 724.0], [70.9, 724.0], [71.0, 724.0], [71.1, 729.0], [71.2, 729.0], [71.3, 732.0], [71.4, 733.0], [71.5, 736.0], [71.6, 736.0], [71.7, 737.0], [71.8, 737.0], [71.9, 740.0], [72.0, 741.0], [72.1, 741.0], [72.2, 743.0], [72.3, 743.0], [72.4, 745.0], [72.5, 751.0], [72.6, 751.0], [72.7, 751.0], [72.8, 751.0], [72.9, 751.0], [73.0, 754.0], [73.1, 756.0], [73.2, 759.0], [73.3, 760.0], [73.4, 760.0], [73.5, 760.0], [73.6, 761.0], [73.7, 761.0], [73.8, 768.0], [73.9, 769.0], [74.0, 770.0], [74.1, 771.0], [74.2, 772.0], [74.3, 773.0], [74.4, 773.0], [74.5, 784.0], [74.6, 785.0], [74.7, 787.0], [74.8, 787.0], [74.9, 789.0], [75.0, 789.0], [75.1, 791.0], [75.2, 793.0], [75.3, 796.0], [75.4, 800.0], [75.5, 806.0], [75.6, 807.0], [75.7, 808.0], [75.8, 813.0], [75.9, 821.0], [76.0, 825.0], [76.1, 826.0], [76.2, 828.0], [76.3, 833.0], [76.4, 834.0], [76.5, 834.0], [76.6, 837.0], [76.7, 840.0], [76.8, 840.0], [76.9, 841.0], [77.0, 845.0], [77.1, 851.0], [77.2, 852.0], [77.3, 853.0], [77.4, 854.0], [77.5, 857.0], [77.6, 858.0], [77.7, 859.0], [77.8, 861.0], [77.9, 862.0], [78.0, 864.0], [78.1, 868.0], [78.2, 871.0], [78.3, 873.0], [78.4, 887.0], [78.5, 892.0], [78.6, 893.0], [78.7, 894.0], [78.8, 898.0], [78.9, 899.0], [79.0, 901.0], [79.1, 908.0], [79.2, 921.0], [79.3, 929.0], [79.4, 930.0], [79.5, 937.0], [79.6, 940.0], [79.7, 944.0], [79.8, 947.0], [79.9, 949.0], [80.0, 953.0], [80.1, 958.0], [80.2, 960.0], [80.3, 975.0], [80.4, 978.0], [80.5, 999.0], [80.6, 1000.0], [80.7, 1003.0], [80.8, 1007.0], [80.9, 1013.0], [81.0, 1016.0], [81.1, 1017.0], [81.2, 1019.0], [81.3, 1019.0], [81.4, 1021.0], [81.5, 1022.0], [81.6, 1024.0], [81.7, 1025.0], [81.8, 1026.0], [81.9, 1038.0], [82.0, 1038.0], [82.1, 1042.0], [82.2, 1060.0], [82.3, 1073.0], [82.4, 1094.0], [82.5, 1095.0], [82.6, 1125.0], [82.7, 1146.0], [82.8, 1177.0], [82.9, 1188.0], [83.0, 1224.0], [83.1, 1300.0], [83.2, 1303.0], [83.3, 1320.0], [83.4, 1322.0], [83.5, 1324.0], [83.6, 1327.0], [83.7, 1328.0], [83.8, 1333.0], [83.9, 1335.0], [84.0, 1336.0], [84.1, 1344.0], [84.2, 1349.0], [84.3, 1353.0], [84.4, 1359.0], [84.5, 1367.0], [84.6, 1367.0], [84.7, 1369.0], [84.8, 1372.0], [84.9, 1374.0], [85.0, 1374.0], [85.1, 1375.0], [85.2, 1376.0], [85.3, 1377.0], [85.4, 1378.0], [85.5, 1382.0], [85.6, 1382.0], [85.7, 1393.0], [85.8, 1393.0], [85.9, 1400.0], [86.0, 1401.0], [86.1, 1402.0], [86.2, 1410.0], [86.3, 1413.0], [86.4, 1413.0], [86.5, 1413.0], [86.6, 1414.0], [86.7, 1415.0], [86.8, 1417.0], [86.9, 1421.0], [87.0, 1423.0], [87.1, 1428.0], [87.2, 1440.0], [87.3, 1446.0], [87.4, 1446.0], [87.5, 1450.0], [87.6, 1474.0], [87.7, 1475.0], [87.8, 1481.0], [87.9, 1481.0], [88.0, 1481.0], [88.1, 1490.0], [88.2, 1496.0], [88.3, 1497.0], [88.4, 1500.0], [88.5, 1501.0], [88.6, 1505.0], [88.7, 1524.0], [88.8, 1527.0], [88.9, 1533.0], [89.0, 1553.0], [89.1, 1560.0], [89.2, 1561.0], [89.3, 1567.0], [89.4, 1568.0], [89.5, 1568.0], [89.6, 1569.0], [89.7, 1573.0], [89.8, 1574.0], [89.9, 1576.0], [90.0, 1580.0], [90.1, 1583.0], [90.2, 1585.0], [90.3, 1590.0], [90.4, 1597.0], [90.5, 1598.0], [90.6, 1601.0], [90.7, 1606.0], [90.8, 1608.0], [90.9, 1609.0], [91.0, 1610.0], [91.1, 1612.0], [91.2, 1612.0], [91.3, 1613.0], [91.4, 1620.0], [91.5, 1621.0], [91.6, 1624.0], [91.7, 1626.0], [91.8, 1627.0], [91.9, 1630.0], [92.0, 1631.0], [92.1, 1632.0], [92.2, 1633.0], [92.3, 1633.0], [92.4, 1636.0], [92.5, 1641.0], [92.6, 1650.0], [92.7, 1660.0], [92.8, 1663.0], [92.9, 1685.0], [93.0, 1707.0], [93.1, 1712.0], [93.2, 1717.0], [93.3, 1723.0], [93.4, 1725.0], [93.5, 1730.0], [93.6, 1732.0], [93.7, 1742.0], [93.8, 1743.0], [93.9, 1752.0], [94.0, 1760.0], [94.1, 1762.0], [94.2, 1786.0], [94.3, 1799.0], [94.4, 1803.0], [94.5, 1813.0], [94.6, 1815.0], [94.7, 1825.0], [94.8, 1829.0], [94.9, 1847.0], [95.0, 1850.0], [95.1, 1851.0], [95.2, 1854.0], [95.3, 1856.0], [95.4, 1857.0], [95.5, 1861.0], [95.6, 1870.0], [95.7, 1874.0], [95.8, 1874.0], [95.9, 1893.0], [96.0, 1897.0], [96.1, 1902.0], [96.2, 1907.0], [96.3, 1931.0], [96.4, 1939.0], [96.5, 1946.0], [96.6, 1953.0], [96.7, 1969.0], [96.8, 1983.0], [96.9, 1995.0], [97.0, 2015.0], [97.1, 2015.0], [97.2, 2042.0], [97.3, 2043.0], [97.4, 2049.0], [97.5, 2114.0], [97.6, 2130.0], [97.7, 2169.0], [97.8, 2175.0], [97.9, 2215.0], [98.0, 2357.0], [98.1, 2539.0], [98.2, 2833.0], [98.3, 2893.0], [98.4, 2896.0], [98.5, 2902.0], [98.6, 2998.0], [98.7, 3024.0], [98.8, 3035.0], [98.9, 3215.0], [99.0, 3239.0], [99.1, 3362.0], [99.2, 3469.0], [99.3, 3520.0], [99.4, 3550.0], [99.5, 3662.0], [99.6, 3704.0], [99.7, 3727.0], [99.8, 4111.0], [99.9, 6339.0]], "isOverall": false, "label": "login Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 650.0, "series": [{"data": [[600.0, 46.0], [700.0, 26.0], [800.0, 10.0], [3300.0, 2.0], [3500.0, 1.0], [900.0, 29.0], [1000.0, 28.0], [1100.0, 18.0], [300.0, 302.0], [1200.0, 11.0], [1300.0, 5.0], [1400.0, 1.0], [1500.0, 1.0], [6100.0, 1.0], [400.0, 381.0], [1700.0, 5.0], [1900.0, 1.0], [500.0, 131.0], [2000.0, 1.0]], "isOverall": false, "label": "Login (post)", "isController": false}, {"data": [[600.0, 11.0], [2600.0, 1.0], [11400.0, 1.0], [800.0, 11.0], [200.0, 74.0], [900.0, 29.0], [1000.0, 17.0], [1100.0, 9.0], [300.0, 650.0], [1200.0, 6.0], [1300.0, 3.0], [400.0, 142.0], [1600.0, 2.0], [500.0, 44.0]], "isOverall": false, "label": "homepage and login/chart/data-166", "isController": false}, {"data": [[600.0, 158.0], [700.0, 40.0], [800.0, 36.0], [900.0, 34.0], [1000.0, 15.0], [1100.0, 9.0], [1200.0, 17.0], [1300.0, 13.0], [1400.0, 14.0], [1500.0, 11.0], [1600.0, 12.0], [1700.0, 12.0], [1800.0, 9.0], [1900.0, 10.0], [2000.0, 5.0], [2100.0, 3.0], [2200.0, 6.0], [2300.0, 3.0], [2400.0, 2.0], [2500.0, 5.0], [2600.0, 4.0], [2700.0, 4.0], [2800.0, 3.0], [2900.0, 1.0], [3100.0, 1.0], [200.0, 2.0], [3200.0, 3.0], [3400.0, 1.0], [3500.0, 2.0], [3600.0, 1.0], [3700.0, 1.0], [300.0, 330.0], [4700.0, 1.0], [5500.0, 1.0], [6200.0, 1.0], [400.0, 97.0], [500.0, 133.0]], "isOverall": false, "label": "home page ", "isController": false}, {"data": [[600.0, 157.0], [700.0, 73.0], [800.0, 36.0], [900.0, 16.0], [1000.0, 20.0], [1100.0, 4.0], [1200.0, 1.0], [1300.0, 28.0], [1400.0, 25.0], [1500.0, 22.0], [1600.0, 24.0], [1700.0, 14.0], [1800.0, 17.0], [1900.0, 9.0], [2000.0, 5.0], [2100.0, 4.0], [2300.0, 1.0], [2200.0, 1.0], [2500.0, 1.0], [2800.0, 3.0], [2900.0, 2.0], [3000.0, 2.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 2.0], [3700.0, 2.0], [3600.0, 1.0], [4100.0, 1.0], [6300.0, 1.0], [400.0, 2.0], [500.0, 522.0]], "isOverall": false, "label": "login Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 233.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1983.0, "series": [{"data": [[0.0, 1983.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1784.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 233.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.687275E12, "maxY": 41.75413170607677, "series": [{"data": [[1.687275E12, 38.12903225806452], [1.68727512E12, 2.0], [1.68727506E12, 41.75413170607677]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68727512E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 282.0, "minX": 1.0, "maxY": 6230.0, "series": [{"data": [[32.0, 373.3333333333333], [33.0, 399.3571428571429], [35.0, 529.074074074074], [34.0, 405.625], [37.0, 426.5], [36.0, 484.2272727272728], [38.0, 517.7526881720432], [39.0, 500.6833333333335], [40.0, 503.6259541984732], [41.0, 498.9633027522936], [43.0, 524.3389830508473], [42.0, 491.79032258064524], [45.0, 730.9375000000001], [44.0, 571.5689655172415], [47.0, 577.3846153846155], [46.0, 582.5918367346939], [48.0, 573.1666666666667], [49.0, 553.5555555555555], [51.0, 566.625], [50.0, 532.5714285714286], [53.0, 550.7], [52.0, 565.375], [54.0, 553.6], [55.0, 813.8571428571429], [56.0, 834.125], [57.0, 724.9999999999999], [59.0, 816.0], [58.0, 582.5], [16.0, 1178.0], [20.0, 3360.0], [26.0, 526.5], [27.0, 569.0], [28.0, 562.5], [29.0, 597.0], [31.0, 566.3333333333334]], "isOverall": false, "label": "Login (post)", "isController": false}, {"data": [[41.829, 538.4400000000005]], "isOverall": false, "label": "Login (post)-Aggregated", "isController": false}, {"data": [[2.0, 309.0], [3.0, 949.0], [4.0, 312.0], [5.0, 290.0], [6.0, 304.0], [7.0, 938.0], [8.0, 297.0], [9.0, 282.0], [10.0, 326.0], [11.0, 325.0], [12.0, 332.0], [13.0, 301.0], [14.0, 1076.0], [15.0, 295.0], [16.0, 1014.0], [17.0, 324.0], [18.0, 337.0], [19.0, 299.0], [20.0, 303.0], [21.0, 1097.0], [22.0, 503.0], [23.0, 534.0], [24.0, 482.0], [25.0, 1330.0], [26.0, 541.0], [27.0, 513.0], [28.0, 528.0], [29.0, 527.0], [30.0, 512.0], [31.0, 368.0], [33.0, 393.55555555555554], [32.0, 341.0], [35.0, 363.17647058823536], [34.0, 500.2727272727273], [37.0, 337.7777777777777], [36.0, 390.71999999999997], [39.0, 383.69444444444457], [38.0, 350.0961538461537], [41.0, 394.1491228070174], [40.0, 380.10156250000006], [43.0, 561.2602739726026], [42.0, 407.72941176470596], [45.0, 448.61999999999995], [44.0, 505.0847457627119], [47.0, 444.52083333333337], [46.0, 425.58536585365846], [49.0, 444.8461538461538], [48.0, 462.5], [51.0, 441.0], [50.0, 388.22222222222223], [53.0, 453.77777777777777], [52.0, 467.0833333333333], [55.0, 499.42857142857144], [54.0, 498.0], [57.0, 677.8], [56.0, 964.8], [58.0, 645.5], [59.0, 530.0], [1.0, 344.0]], "isOverall": false, "label": "homepage and login/chart/data-166", "isController": false}, {"data": [[41.518999999999956, 428.8410000000001]], "isOverall": false, "label": "homepage and login/chart/data-166-Aggregated", "isController": false}, {"data": [[33.0, 503.0], [32.0, 343.0], [2.0, 1936.0], [35.0, 552.8823529411765], [34.0, 526.45], [37.0, 737.0322580645161], [36.0, 584.5384615384614], [39.0, 654.4999999999998], [38.0, 703.9420289855075], [40.0, 764.7461538461539], [41.0, 808.7115384615387], [43.0, 721.2222222222222], [42.0, 663.8857142857145], [44.0, 632.6268656716419], [45.0, 685.4], [46.0, 674.6410256410257], [47.0, 746.675], [48.0, 897.8888888888889], [49.0, 992.9310344827586], [50.0, 684.5], [51.0, 700.0], [52.0, 815.3076923076923], [53.0, 1004.4285714285713], [55.0, 900.25], [54.0, 658.8], [56.0, 1017.8333333333333], [57.0, 624.0], [58.0, 823.2], [59.0, 2495.0], [8.0, 1360.5], [14.0, 2206.0], [16.0, 2532.0], [19.0, 1090.6], [20.0, 6230.0], [21.0, 520.0], [23.0, 2078.0], [24.0, 4758.0], [26.0, 519.3333333333334], [30.0, 999.6666666666666], [31.0, 725.0]], "isOverall": false, "label": "home page ", "isController": false}, {"data": [[41.61299999999999, 741.7719999999995]], "isOverall": false, "label": "home page -Aggregated", "isController": false}, {"data": [[33.0, 822.5625000000001], [32.0, 539.25], [35.0, 697.3478260869565], [34.0, 793.2142857142857], [37.0, 969.7000000000002], [36.0, 871.8999999999999], [38.0, 787.9054054054055], [39.0, 729.0166666666664], [40.0, 801.7079646017698], [41.0, 824.5344827586205], [42.0, 755.2295081967212], [43.0, 882.4561403508771], [44.0, 820.6393442622949], [45.0, 835.4634146341466], [46.0, 796.0000000000002], [47.0, 945.0769230769231], [49.0, 897.6], [48.0, 878.2916666666665], [51.0, 963.1], [50.0, 832.125], [52.0, 876.2142857142858], [53.0, 1109.4444444444443], [55.0, 794.8], [54.0, 884.6], [56.0, 1093.4166666666665], [57.0, 882.2], [58.0, 1190.3333333333333], [59.0, 628.0], [21.0, 859.6666666666667], [23.0, 600.0], [28.0, 789.5], [31.0, 1062.0]], "isOverall": false, "label": "login Page", "isController": false}, {"data": [[41.63200000000001, 825.7119999999998]], "isOverall": false, "label": "login Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 59.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 83.76666666666667, "minX": 1.687275E12, "maxY": 216393.28333333333, "series": [{"data": [[1.687275E12, 2670.4], [1.68727512E12, 332.0833333333333], [1.68727506E12, 216393.28333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.687275E12, 687.9666666666667], [1.68727512E12, 83.76666666666667], [1.68727506E12, 56542.433333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68727512E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 428.52457372116356, "minX": 1.687275E12, "maxY": 1936.0, "series": [{"data": [[1.687275E12, 770.0909090909091], [1.68727506E12, 533.2290388548058]], "isOverall": false, "label": "Login (post)", "isController": false}, {"data": [[1.68727512E12, 534.0], [1.68727506E12, 428.52457372116356]], "isOverall": false, "label": "homepage and login/chart/data-166", "isController": false}, {"data": [[1.687275E12, 546.4], [1.68727512E12, 1936.0], [1.68727506E12, 740.3504531722061]], "isOverall": false, "label": "home page ", "isController": false}, {"data": [[1.687275E12, 892.1142857142855], [1.68727506E12, 823.3036269430049]], "isOverall": false, "label": "login Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68727512E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 428.5065195586757, "minX": 1.687275E12, "maxY": 1055.0, "series": [{"data": [[1.687275E12, 769.909090909091], [1.68727506E12, 533.2137014314931]], "isOverall": false, "label": "Login (post)", "isController": false}, {"data": [[1.68727512E12, 534.0], [1.68727506E12, 428.5065195586757]], "isOverall": false, "label": "homepage and login/chart/data-166", "isController": false}, {"data": [[1.687275E12, 545.6], [1.68727512E12, 1055.0], [1.68727506E12, 623.0956696878152]], "isOverall": false, "label": "home page ", "isController": false}, {"data": [[1.687275E12, 891.6], [1.68727506E12, 768.0829015544045]], "isOverall": false, "label": "login Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68727512E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.687275E12, "maxY": 426.11428571428576, "series": [{"data": [[1.687275E12, 0.0], [1.68727506E12, 0.0]], "isOverall": false, "label": "Login (post)", "isController": false}, {"data": [[1.68727512E12, 0.0], [1.68727506E12, 0.0]], "isOverall": false, "label": "homepage and login/chart/data-166", "isController": false}, {"data": [[1.687275E12, 0.0], [1.68727512E12, 0.0], [1.68727506E12, 0.0]], "isOverall": false, "label": "home page ", "isController": false}, {"data": [[1.687275E12, 426.11428571428576], [1.68727506E12, 316.1036269430053]], "isOverall": false, "label": "login Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68727512E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 278.0, "minX": 1.687275E12, "maxY": 11470.0, "series": [{"data": [[1.687275E12, 1224.0], [1.68727512E12, 2258.0], [1.68727506E12, 11470.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.687275E12, 1034.4], [1.68727512E12, 2258.0], [1.68727506E12, 1103.7999999999997]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.687275E12, 1224.0], [1.68727512E12, 2258.0], [1.68727506E12, 2798.9399999999987]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.687275E12, 1090.85], [1.68727512E12, 2258.0], [1.68727506E12, 1606.5999999999995]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.687275E12, 468.0], [1.68727512E12, 309.0], [1.68727506E12, 278.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.687275E12, 816.0], [1.68727512E12, 949.0], [1.68727506E12, 497.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68727512E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 337.0, "minX": 1.0, "maxY": 1281.5, "series": [{"data": [[37.0, 541.5], [44.0, 810.5], [47.0, 556.0], [49.0, 532.0], [53.0, 562.0], [52.0, 636.0], [54.0, 668.0], [55.0, 459.0], [57.0, 388.0], [58.0, 517.5], [60.0, 411.5], [61.0, 528.0], [63.0, 451.5], [62.0, 433.0], [67.0, 418.0], [66.0, 514.5], [64.0, 449.0], [65.0, 505.5], [4.0, 1281.5], [71.0, 458.0], [69.0, 468.0], [68.0, 410.0], [75.0, 511.0], [74.0, 497.5], [72.0, 411.0], [73.0, 461.0], [79.0, 486.0], [77.0, 491.0], [76.0, 459.5], [78.0, 457.5], [80.0, 636.5], [1.0, 344.0], [18.0, 836.5], [23.0, 337.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 80.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 337.0, "minX": 1.0, "maxY": 977.0, "series": [{"data": [[37.0, 541.5], [44.0, 810.5], [47.0, 555.0], [49.0, 532.0], [53.0, 562.0], [52.0, 635.5], [54.0, 667.5], [55.0, 459.0], [57.0, 388.0], [58.0, 517.5], [60.0, 411.5], [61.0, 528.0], [63.0, 451.5], [62.0, 433.0], [67.0, 418.0], [66.0, 514.5], [64.0, 448.5], [65.0, 505.5], [4.0, 977.0], [71.0, 458.0], [69.0, 468.0], [68.0, 410.0], [75.0, 511.0], [74.0, 497.5], [72.0, 411.0], [73.0, 461.0], [79.0, 486.0], [77.0, 491.0], [76.0, 459.0], [78.0, 457.5], [80.0, 636.5], [1.0, 344.0], [18.0, 834.5], [23.0, 337.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 80.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.687275E12, "maxY": 64.71666666666667, "series": [{"data": [[1.687275E12, 1.9166666666666667], [1.68727512E12, 0.03333333333333333], [1.68727506E12, 64.71666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68727512E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.687275E12, "maxY": 65.55, "series": [{"data": [[1.687275E12, 1.0333333333333334], [1.68727512E12, 0.08333333333333333], [1.68727506E12, 65.55]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68727512E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.687275E12, "maxY": 16.616666666666667, "series": [{"data": [[1.687275E12, 0.36666666666666664], [1.68727506E12, 16.3]], "isOverall": false, "label": "Login (post)-success", "isController": false}, {"data": [[1.68727512E12, 0.05], [1.68727506E12, 16.616666666666667]], "isOverall": false, "label": "homepage and login/chart/data-166-success", "isController": false}, {"data": [[1.687275E12, 0.5833333333333334], [1.68727506E12, 16.083333333333332]], "isOverall": false, "label": "login Page-success", "isController": false}, {"data": [[1.687275E12, 0.08333333333333333], [1.68727512E12, 0.03333333333333333], [1.68727506E12, 16.55]], "isOverall": false, "label": "home page -success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68727512E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.687275E12, "maxY": 65.55, "series": [{"data": [[1.687275E12, 1.0333333333333334], [1.68727512E12, 0.08333333333333333], [1.68727506E12, 65.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68727512E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

